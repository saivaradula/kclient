{"version":3,"sources":["components/invoice/detailsModel.js","components/product/finder.js"],"names":["PAY_TYPE","id","value","PAY_METHOD","InvoiceDetailsModal","invoice","payments","show","handleClose","isInvoice","isPaid","cb","isfinder","isQuote","modalInvoice","setModalInvoice","useState","inv","data","invoiceId","setInvoiceId","fm","setfm","finalamount","pm","setpm","payableamount","tm","settm","reduce","a","b","cost","toFixed","modalData","setModalData","useEffect","old","invoiceData","logoSize","height","width","showPaymentModel","setShowPM","advancePay","setAdvancePay","chequeNo","setChequeNo","bank","setBank","transactionId","setTransactionId","paymentMethod","setPaymentMethod","paymenttype","setPaymentType","addMorePayments","oldV","makePayment","payLoad","method","payment_type","amt","chequeno","transId","invoice_id","axios","post","process","then","async","markStatusChange","status","onHide","size","Header","className","src","logo","style","onClick","window","open","focus","printThisInvoice","printImages","Body","length","moment","utc","startDate","format","endDate","to_name","to_address","art_director_name","name","herodirector","content_type","contactName","contactPhone","prop_receiver_name","prop_receiver","art_phone","items","map","p","product_image","product_code","product_name","quantity","pStartDate","pEndDate","rent_days","discount","gstpercentage","colSpan","amount","index","paidby","cheque_no","transaction_id","paid_on","Footer","undefined","invoice_status","oldv","closeButton","Title","onChange","e","target","i","type","placeholder","returnFun","require","config","ItemFinder","props","ACTIONS","setShow","setPayments","invoiceDetails","dispatch","useReducer","state","action","toaddress","payload","to_city","to_details","toName","city","address","gst","dated","rents_start_on","is_value","payment","ip_value","vendoraddress","searchTerm","setSearchTerm","searchR","setSearchR","searched","setSearched","changeTerm","event","clearSearch","getItem","get","response","getDetail","console","log","xs","color","code","to","path","isBlocked","rstatus","indexOf","finder"],"mappings":"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","file":"static/js/35.198d098e.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport moment from 'moment'\r\nimport axios from 'axios'\r\nimport logo from '../../../src/assets/images/logo.png'\r\n\r\nconst INVOICE_PENDING = 1\r\nconst INVOICE_ACCEPTED = 2\r\nconst INVOICE_REJECTED = 3\r\n\r\nconst ACTIONS = {\r\n  ADD_NEW: 'new',\r\n  UPDATE_ADDRESS: 'address',\r\n  RESET: 'reset',\r\n}\r\n\r\nconst PAY_TYPE = [\r\n  { id: 4, value: 'Advance Payment' },\r\n  { id: 3, value: 'Partial Payment' },\r\n  { id: 2, value: 'Full Payment' },\r\n]\r\n\r\nconst PAY_METHOD = ['Google Pay', 'Paytm', 'PhonePe', 'Internet Banking', 'Cheque', 'Cash']\r\n\r\nconst InvoiceDetailsModal = ({ invoice, payments, show, handleClose, isInvoice, isPaid, cb, isfinder = false, isQuote = false }) => {\r\n\r\n  const [modalInvoice, setModalInvoice] = useState(() => invoice)\r\n  modalInvoice.inv = invoice.inv\r\n  modalInvoice.data = invoice.data;\r\n  const [invoiceId, setInvoiceId] = useState(() => invoice.inv)\r\n  const [fm, setfm] = useState(() => invoice.finalamount)\r\n  const [pm, setpm] = useState(() => invoice.payableamount)\r\n  const [tm, settm] = useState(() => invoice.data.reduce((a, b) => a + b.cost, 0).toFixed(2))\r\n  const [modalData, setModalData] = useState(() => invoice.data)\r\n\r\n  useEffect(() => {\r\n    setModalData((old) => invoice.data)\r\n    setpm((old) => invoice.payableamount)\r\n    settm((old) => invoice.data.reduce((a, b) => a + b.cost, 0).toFixed(2))\r\n  }, [invoice.inv])\r\n\r\n  const invoiceData = invoice.data[0]\r\n  const logoSize = {\r\n    height: 120,\r\n    width: 350,\r\n  }\r\n\r\n  const [showPaymentModel, setShowPM] = useState(() => false)\r\n  const [advancePay, setAdvancePay] = useState(() => 0)\r\n  const [chequeNo, setChequeNo] = useState(() => '')\r\n  const [bank, setBank] = useState(() => '')\r\n  const [transactionId, setTransactionId] = useState(() => '')\r\n  const [paymentMethod, setPaymentMethod] = useState(() => '')\r\n  const [paymenttype, setPaymentType] = useState(() => '')\r\n\r\n  const removeItemFromInvoice = async (id, code, cost) => {\r\n    let response = await axios.delete(`${process.env.REACT_APP_API_URL}/invoice/${id}/${code}/${cost}`);\r\n    setModalInvoice((oldDate) => (\r\n      {\r\n        ...oldDate,\r\n        finalamount: response.data[0].finalamount,\r\n        payableamount: response.data[0].payableamount,\r\n        totalCost: response.data[0].totalCost,\r\n        data: response.data\r\n      }))\r\n    setpm((old) => response.data[0].payableamount)\r\n    settm((old) => response.data.reduce((a, b) => a + b.cost, 0).toFixed(2))\r\n    setModalData((old) => response.data)\r\n    cb()\r\n  }\r\n\r\n  const addMorePayments = () => {\r\n    setShowPM((oldV) => true)\r\n  }\r\n\r\n  const makePayment = () => {\r\n    let payLoad = {\r\n      method: paymentMethod,\r\n      payment_type: paymenttype,\r\n      amt: advancePay,\r\n      chequeno: chequeNo,\r\n      bank: bank,\r\n      transId: transactionId,\r\n      invoice_id: modalInvoice.inv,\r\n    }\r\n    axios\r\n      .post(`${process.env.REACT_APP_API_URL}/invoice/payment/${invoice.inv}`, payLoad)\r\n      .then(async (response) => {\r\n        if (!isInvoice) {\r\n          // mark it as invoice.\r\n          axios\r\n            .post(`${process.env.REACT_APP_API_URL}/invoice/mark/${invoice.inv}`)\r\n            .then(async (res) => { })\r\n        }\r\n\r\n        // 2 is FULL PAYMENT if payment is made.\r\n        if (paymenttype == 2) {\r\n          axios\r\n            .post(`${process.env.REACT_APP_API_URL}/invoice/markpaid/${invoice.inv}`)\r\n            .then(async (res) => { })\r\n        }\r\n\r\n        setShowPM((oldV) => false)\r\n        setTransactionId('')\r\n        setPaymentType('')\r\n        setPaymentMethod('')\r\n        cb()\r\n        handleClose()\r\n      })\r\n  }\r\n\r\n  const markStatusChange = (status) => {\r\n    axios\r\n      .post(`${process.env.REACT_APP_API_URL}/invoice/${invoice.inv}/mark/${status}`)\r\n      .then(async (res) => {\r\n        cb()\r\n        handleClose()\r\n      })\r\n  }\r\n\r\n  const displayItems = (items) => {\r\n\r\n    return (\r\n      <table className=\"table table-striped\">\r\n        <thead>\r\n          <tr>\r\n            <th width=\"4%\">Image</th>\r\n            <th width=\"10%\">Code</th>\r\n            <th width=\"25%\">Name</th>\r\n            <th width=\"5%\">Qty</th>\r\n            <th width=\"10%\">From</th>\r\n            <th width=\"10%\">To</th>\r\n            <th width=\"2%\">Days</th>\r\n            <th width=\"10%\" className=\"money\">Hire Cost</th>\r\n            {\r\n              (!isfinder && !isPaid) ? <th width=\"5%\">Actions</th> : <></>\r\n            }\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {\r\n\r\n            items.map((p) => (\r\n              <tr key={p.product_code}>\r\n                <td>\r\n                  <img src={p.product_image} width=\"30\" height=\"30\" />\r\n                </td>\r\n                <td>{p.product_code}</td>\r\n                <td>{p.product_name}</td>\r\n                <td>{p.quantity}</td>\r\n                <td>{moment.utc(p.pStartDate).format('DD/MM/yyyy')}</td>\r\n                <td>{moment.utc(p.pEndDate).format('DD/MM/yyyy')}</td>\r\n                <td className=\"money\">{p.rent_days}</td>\r\n                <td className=\"money\">{p.cost.toFixed(2)}</td>\r\n                {\r\n                  // TODO: remove below td.\r\n                }\r\n                <td>-</td>\r\n                {\r\n                  /*\r\n                  (!isfinder && !isPaid) ?\r\n                  <td><button\r\n                    className=\"btn btn-secondary\"\r\n                    onClick={() => removeItemFromInvoice(modalInvoice.inv, p.product_code, p.cost.toFixed(2))}\r\n                  >\r\n                    Remove\r\n                  </button></td> :\r\n                  <></>\r\n                  */\r\n                }\r\n\r\n              </tr>\r\n            ))\r\n\r\n          }\r\n        </tbody>\r\n      </table>\r\n    )\r\n  }\r\n\r\n  const printThisInvoice = (invoice) => {\r\n    // console.log(invoice)\r\n    const win = window.open(`#/invoice/internalprint/${invoice}`, \"_blank\");\r\n    win.focus();\r\n  }\r\n\r\n  const printImages = (invoice) => {\r\n    const win = window.open(`#/invoice/imageprint/${invoice}`, \"_blank\");\r\n    win.focus();\r\n  }\r\n\r\n  const returnFun = () => {\r\n    return (\r\n      <>\r\n        <Modal show={show} onHide={handleClose} size=\"xl\">\r\n          <Modal.Header className=\"logo-color logo\">\r\n            <div className=\"row\">\r\n              <div className=\"col-8 logo-color columnLeft\">\r\n                <img src={logo} style={logoSize} />\r\n              </div>\r\n              <div className=\"col-2 printRight\">\r\n                <button\r\n                  className=\"btn btn-primary\"\r\n                  onClick={() => printThisInvoice(invoice.inv)}\r\n                >\r\n                  Print\r\n                </button>\r\n              </div>\r\n              <div className=\"col-2 printRight\">\r\n                <button\r\n                  className=\"btn btn-primary\"\r\n                  onClick={() => printImages(invoice.inv)}\r\n                >\r\n                  Image Print\r\n                </button>\r\n              </div>\r\n            </div>\r\n\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <div className=\"container-fluid\">\r\n              <div className=\"lh-3 row mt-1\">\r\n                <div className=\"col-sm-4\">\r\n                  <strong>{payments.length ? 'Invoice' : 'Quotation'} Number:</strong>&nbsp;&nbsp;\r\n                  {invoice.inv}\r\n                </div>\r\n                <div className=\"col-sm-4\">\r\n                  <strong>From:</strong>&nbsp;&nbsp;\r\n                  {moment.utc(invoiceData.startDate).format('dddd - MMM Do, YYYY')}\r\n                </div>\r\n                <div className=\"col-sm-4\">\r\n                  <strong>To:</strong>&nbsp;&nbsp;\r\n                  {moment.utc(invoiceData.endDate).format('dddd - MMM Do, YYYY')}\r\n                </div>\r\n              </div>\r\n              <div>\r\n                <div className=\"lh-3 row mt-4\">\r\n                  <div className=\"col-sm-6\">\r\n                    <strong>M/s</strong>&nbsp;&nbsp;\r\n                    <span className=\"border-bottom\">{invoiceData.to_name ? invoiceData.to_name : ''}</span>\r\n                  </div>\r\n\r\n                  <div className=\"col-sm-6\">\r\n                    <strong>Location</strong>&nbsp;&nbsp;\r\n                    <span className=\"border-bottom\">{invoiceData.to_address}</span>\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"lh-3 row mt-4\">\r\n                  <div className=\"col-sm-4\">\r\n                    <strong>Art Director</strong>&nbsp;&nbsp;\r\n                    <span className=\"border-bottom\">{invoiceData.art_director_name}</span>\r\n                  </div>\r\n                  <div className=\"col-sm-4\">\r\n                    <strong>Hero/Director</strong>&nbsp;&nbsp;\r\n                    <span className=\"border-bottom\">{invoiceData.name}({invoiceData.herodirector})</span>\r\n                  </div>\r\n                  <div className=\"col-sm-3\">\r\n                    <strong>Content Type</strong>&nbsp;&nbsp;\r\n                    <span className=\"border-bottom\">{invoiceData.content_type}</span>\r\n                  </div>\r\n                </div>\r\n                <div className=\"lh-3 row mt-4\">\r\n                  <div className=\"col-sm-6\">\r\n                    <strong>Contact Name / Phone</strong>&nbsp;&nbsp;\r\n                    <span className=\"border-bottom\">\r\n                      {invoiceData.contactName} / {invoiceData.contactPhone}\r\n                    </span>\r\n                  </div>\r\n                  <div className=\"col-sm-6\">\r\n                    <strong>Received By / Phone</strong>&nbsp;&nbsp;\r\n                    <span className=\"border-bottom\">\r\n                      {invoiceData.prop_receiver_name}({invoiceData.prop_receiver}) / {invoiceData.art_phone}\r\n                    </span>\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"row mt-5\">\r\n                  {displayItems(modalData)}\r\n                  <table className=\"table table-striped\">\r\n                    <tbody>\r\n                      <tr>\r\n                        <td className=\"\">\r\n                          <strong>Cost&nbsp;:&nbsp;</strong>\r\n                          {tm}\r\n                          {/* {invoice.data.reduce((a, b) => a + b.cost, 0).toFixed(2)} */}\r\n                        </td>\r\n                        <td className=\"\">\r\n                          <strong>Discount&nbsp;:&nbsp;</strong>\r\n                          {invoice.discount} %\r\n                        </td>\r\n                        <td className=\"\">\r\n                          <strong>GST&nbsp;:&nbsp;</strong>\r\n                          {invoice.gstpercentage} %\r\n                        </td>\r\n                        <td className=\"money\">\r\n                          <strong>Payable Amount</strong>\r\n                        </td>\r\n                        <td className=\"money\">{pm}</td>\r\n                        {/* <td>&nbsp;</td> */}\r\n                      </tr>\r\n                      {!isfinder && isInvoice ? (\r\n                        <>\r\n                          <tr>\r\n                            <td className=\"money\" colSpan={4}>\r\n                              <strong>Total Paid till now</strong>\r\n                            </td>\r\n                            <td className=\"money\">{payments.reduce((a, b) => a + b.amount, 0).toFixed(2)}</td>\r\n\r\n                          </tr>\r\n                          <tr>\r\n                            <td className=\"money\" colSpan={4}>\r\n                              <strong>Remaining / Refund</strong>\r\n                            </td>\r\n                            <td className=\"money\">\r\n                              {(pm -\r\n                                payments.reduce((a, b) => a + b.amount, 0)).toFixed(2)}\r\n                            </td>\r\n                            {/* <td>&nbsp;</td> */}\r\n                          </tr>\r\n                        </>\r\n                      ) : (\r\n                        <></>\r\n                      )}\r\n                    </tbody>\r\n                  </table>\r\n                </div>\r\n\r\n                {!isfinder && isInvoice ? (\r\n                  <div className=\"row mt-5\">\r\n                    <table className=\"table table-striped\">\r\n                      <thead>\r\n                        <tr>\r\n                          <th>S.No.</th>\r\n                          <th>Payment Type</th>\r\n                          <th>Payment Method</th>\r\n                          <th>Transaction Id</th>\r\n                          <th>Amount</th>\r\n                          <th>Paid On</th>\r\n                        </tr>\r\n                      </thead>\r\n                      <tbody>\r\n                        {payments.map((p, index) => (\r\n                          <tr key={index}>\r\n                            <td>{index + 1}</td>\r\n                            <td>{p.paidby}</td>\r\n                            <td>\r\n                              {p.method}\r\n                              {p.method == 'cheque' ? (\r\n                                <span>\r\n                                  &nbsp; / {p.cheque_no} / {p.bank}{' '}\r\n                                </span>\r\n                              ) : (\r\n                                <></>\r\n                              )}\r\n                            </td>\r\n                            <td>{p.transaction_id}</td>\r\n                            <td>{p.amount}</td>\r\n                            <td>{moment.utc(p.paid_on).format('DD/MM/yyyy')}</td>\r\n                          </tr>\r\n                        ))}\r\n                      </tbody>\r\n                    </table>\r\n                  </div>\r\n                ) : (\r\n                  <></>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            {!isfinder && isInvoice && !isPaid ? (\r\n              <>\r\n                {modalInvoice.data !== undefined && modalInvoice.data.length > 0 ? (\r\n                  <>\r\n                    {modalInvoice.data[0].invoice_status == INVOICE_ACCEPTED ||\r\n                      modalInvoice.data[0].invoice_status == INVOICE_PENDING ? (\r\n                      <button\r\n                        className=\"btn btn-secondary\"\r\n                        onClick={() => markStatusChange('rejected')}\r\n                      >\r\n                        Mark As Rejectd Invoice\r\n                      </button>\r\n                    ) : (\r\n                      <></>\r\n                    )}\r\n\r\n                    {modalInvoice.data[0].invoice_status == INVOICE_REJECTED ||\r\n                      modalInvoice.data[0].invoice_status == INVOICE_PENDING ? (\r\n                      <button\r\n                        className=\"btn btn-primary\"\r\n                        onClick={() => markStatusChange('accepted')}\r\n                      >\r\n                        Mark As Accepted Invoice\r\n                      </button>\r\n                    ) : (\r\n                      <></>\r\n                    )}\r\n\r\n                    {modalInvoice.data[0].invoice_status == INVOICE_ACCEPTED ? (\r\n                      <button className=\"btn btn-primary\" onClick={() => addMorePayments()}>\r\n                        Add More Payments\r\n                      </button>\r\n                    ) : (\r\n                      <></>\r\n                    )}\r\n                  </>\r\n                ) : (\r\n                  <></>\r\n                )}\r\n              </>\r\n            ) : (\r\n              <></>\r\n            )}\r\n\r\n            {!isfinder && !isInvoice && !isPaid ? (\r\n              <>\r\n                <button className=\"btn btn-primary\" onClick={() => addMorePayments()}>\r\n                  Mark As Invoice\r\n                </button>\r\n              </>\r\n            ) : (\r\n              <></>\r\n            )}\r\n          </Modal.Footer>\r\n        </Modal>\r\n\r\n        {/* Payment Model Start */}\r\n        <Modal\r\n          className=\"\"\r\n          show={showPaymentModel}\r\n          onHide={() => setShowPM((oldv) => false)}\r\n          size=\"xl\"\r\n        >\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>Add Payment Details</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <fieldset>\r\n              <legend>Payment Details</legend>\r\n              <div className=\"row mt-2\">\r\n                <div className=\"col\">\r\n                  <select onChange={(e) => setPaymentMethod(e.target.value)} className=\"form-control\">\r\n                    <option value=\"\">Select Method</option>\r\n                    {PAY_METHOD.map((i) => (\r\n                      <option value={i}>{i}</option>\r\n                    ))}\r\n                  </select>\r\n                </div>\r\n                <div className=\"col\">\r\n                  <select onChange={(e) => setPaymentType(e.target.value)} className=\"form-control\">\r\n                    <option value=\"\">Select Type</option>\r\n                    {PAY_TYPE.map((i) => (\r\n                      <option value={i.id}>{i.value}</option>\r\n                    ))}\r\n                  </select>\r\n                </div>\r\n                <div className=\"col\">\r\n                  <input\r\n                    value={advancePay}\r\n                    type=\"text\"\r\n                    onChange={(e) => setAdvancePay(e.target.value)}\r\n                    className=\"form-control\"\r\n                    placeholder=\"Amount\"\r\n                  />\r\n                </div>\r\n                {paymentMethod === 'Cheque' ? (\r\n                  <div className=\"col\">\r\n                    <input\r\n                      value={chequeNo}\r\n                      type=\"text\"\r\n                      onChange={(e) => setChequeNo(e.target.value)}\r\n                      className=\"form-control\"\r\n                      placeholder=\"Cheque No\"\r\n                    />\r\n                  </div>\r\n                ) : (\r\n                  <></>\r\n                )}\r\n              </div>\r\n\r\n              {paymentMethod === 'Cheque' ? (\r\n                <div className=\"row mt-2\">\r\n                  <div className=\"col\">\r\n                    <input\r\n                      value={bank}\r\n                      type=\"text\"\r\n                      onChange={(e) => setBank(e.target.value)}\r\n                      className=\"form-control\"\r\n                      placeholder=\"Enter Bank Details - Name, Branch\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n              ) : (\r\n                <></>\r\n              )}\r\n\r\n              <div className=\"row mt-2\">\r\n                {paymentMethod !== 'cheque' ? (\r\n                  <div className=\"col\">\r\n                    <input\r\n                      value={transactionId}\r\n                      type=\"text\"\r\n                      onChange={(e) => setTransactionId(e.target.value)}\r\n                      className=\"form-control\"\r\n                      placeholder=\"Transaction Id\"\r\n                    />\r\n                  </div>\r\n                ) : (\r\n                  <></>\r\n                )}\r\n              </div>\r\n            </fieldset>\r\n            <div>&nbsp;</div>\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <button className=\"btn btn-primary\" onClick={makePayment}>\r\n              Make Payment\r\n            </button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n      </>\r\n    )\r\n  }\r\n\r\n  return (\r\n    returnFun()\r\n    // setTimeout(() => { return returnFun() }, 3000)\r\n  )\r\n}\r\n\r\nexport default InvoiceDetailsModal\r\n","import React, { useEffect, useReducer, useState } from 'react'\r\nimport moment from 'moment'\r\nimport { useHistory, Link } from 'react-router-dom'\r\nimport {\r\n    CButton,\r\n    CCard,\r\n    CCardBody,\r\n    CCardHeader,\r\n    CCol,\r\n    CForm,\r\n    CFormInput,\r\n    CFormLabel,\r\n    CFormSelect,\r\n    CFormFeedback,\r\n    CRow,\r\n} from '@coreui/react'\r\n\r\nimport InvoiceDetailsModal from '../invoice/detailsModel'\r\n\r\nimport axios from 'axios'\r\nrequire('dotenv').config()\r\n\r\nconst ItemFinder = (props) => {\r\n\r\n    const ACTIONS = {\r\n        ADD_NEW: 'new',\r\n        UPDATE_ADDRESS: 'address',\r\n        RESET: 'reset',\r\n    }\r\n\r\n    const [show, setShow] = useState(() => false)\r\n    const handleClose = () => setShow(() => false)\r\n    const handleShow = () => setShow(() => true)\r\n    const [payments, setPayments] = useState([])\r\n\r\n    const reducer = (state, action) => {\r\n        switch (action.type) {\r\n            case ACTIONS.ADD_NEW: {\r\n                let toaddress = action.payload.data[0].to_name\r\n                    ? action.payload.data[0].to_name + ' - ' + action.payload.data[0].to_city\r\n                    : ''\r\n\r\n                return {\r\n                    ...state,\r\n                    inv: action.payload.inv,\r\n                    to_details: toaddress,\r\n                    toName: action.payload.data[0].to_name,\r\n                    city: action.payload.data[0].to_city,\r\n                    address: action.payload.data[0].to_address,\r\n                    gst: action.payload.gst,\r\n                    dated: action.payload.data[0].rents_start_on,\r\n                    data: action.payload.data,\r\n                    status: action.payload.data[0].is_value,\r\n                    payment: action.payload.data[0].ip_value,\r\n                    finalamount: action.payload.data[0].finalamount,\r\n                    discount: action.payload.data[0].discount,\r\n                    gstpercentage: action.payload.data[0].gstpercentage,\r\n                    payableamount: action.payload.data[0].payableamount,\r\n                    vendoraddress: action.payload.data[0].vendoraddress\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    const [invoiceDetails, dispatch] = useReducer(reducer, {\r\n        inv: '',\r\n        to_details: '',\r\n        toName: '',\r\n        city: '',\r\n        address: '',\r\n        status: '',\r\n        payment: '',\r\n        gst: '',\r\n        dated: '',\r\n        finalamount: 0,\r\n        discount: 0,\r\n        gstpercentage: 0,\r\n        data: [],\r\n    })\r\n\r\n    let [searchTerm, setSearchTerm] = useState(() => '')\r\n    let [searchR, setSearchR] = useState(() => [])\r\n    const [searched, setSearched] = useState(() => false)\r\n\r\n    const changeTerm = (event) => {\r\n        setSearchTerm(event.target.value)\r\n    }\r\n\r\n    const clearSearch = () => {\r\n        setSearchTerm('')\r\n        setSearched(() => false)\r\n        setSearchR(() => [])\r\n    }\r\n\r\n    const getItem = () => {\r\n        axios.get(`${process.env.REACT_APP_API_URL}/items/find/${searchTerm}`).then((response) => {\r\n\r\n            setSearchR(() => response.data)\r\n            setSearched(() => true)\r\n        })\r\n    }\r\n\r\n    const getDetail = (invoice) => {\r\n        axios\r\n            .get(`${process.env.REACT_APP_API_URL}/invoice/${invoice}/payments`)\r\n            .then(async (response) => {\r\n                setPayments(response.data)\r\n            })\r\n        axios\r\n            .get(`${process.env.REACT_APP_API_URL}/invoice/${invoice}/details`)\r\n            .then(async (response) => {\r\n                console.log(\"response\", response)\r\n                dispatch({ type: ACTIONS.ADD_NEW, payload: { data: response.data, inv: invoice } })\r\n                handleShow()\r\n            })\r\n    }\r\n\r\n    const results = () => {\r\n        return (\r\n\r\n            <CCard className=\"mb-4\">\r\n                <CCardHeader>\r\n                    Search Results\r\n                </CCardHeader>\r\n                <CCardBody>\r\n                    <CRow>\r\n                        {\r\n                            searched ?\r\n                                searchR.length ?\r\n                                    <>\r\n                                        <table className=\"table prlist\">\r\n                                            <thead>\r\n                                                <tr>\r\n                                                    <th>Code</th>\r\n                                                    <th>Name</th>\r\n                                                    <th>Invoice Number</th>\r\n                                                    <th>Given To</th>\r\n                                                    <th>Company</th>\r\n                                                    <th>Content</th>\r\n                                                    <th>Sent On</th>\r\n                                                    <th>Expected On</th>\r\n                                                    <th>Where</th>\r\n                                                </tr>\r\n                                            </thead>\r\n                                            <tbody>\r\n                                                {\r\n                                                    searchR.map(i => (\r\n                                                        <tr>\r\n                                                            <td>{i.code}</td>\r\n                                                            <td>{i.name}</td>\r\n                                                            <td>\r\n                                                                <Link to=\"#\" path=\"#\"\r\n                                                                    onClick={() => getDetail(i.invoice_id)}>\r\n                                                                    {i.invoice_id}\r\n                                                                </Link>\r\n                                                            </td>\r\n                                                            <td>{i.prop_receiver_name}</td>\r\n                                                            <td>{i.to_name}</td>\r\n                                                            <td>{i.content_type}</td>\r\n                                                            <td>\r\n                                                                {moment.utc(i.startDate).format('ddd - MMM Do, YYYY')}\r\n                                                            </td>\r\n                                                            <td>\r\n                                                                {moment.utc(i.endDate).format('ddd - MMM Do, YYYY')}\r\n                                                            </td>\r\n                                                            <td>\r\n                                                                {\r\n                                                                    (i.isBlocked) ? 'Booked'\r\n                                                                        :\r\n                                                                        (i.rstatus === 'NR') ? 'Pending'\r\n                                                                            :\r\n                                                                            (i.rstatus === 'R') ?\r\n                                                                                (i.code.indexOf('-D') > 0) ? 'Damaged'\r\n                                                                                    :\r\n                                                                                    (i.code.indexOf('-FULL_D') > 0) ? 'Fully Damaged' : 'Received'\r\n                                                                                :\r\n                                                                                ''\r\n                                                                }\r\n                                                            </td>\r\n                                                        </tr>\r\n                                                    ))\r\n                                                }\r\n                                            </tbody>\r\n                                        </table>\r\n                                    </>\r\n                                    :\r\n                                    <>\r\n                                        <h4>No Item found. Search with different Product Name, code or Nickname</h4>\r\n                                    </>\r\n                                :\r\n                                <>Search with any product from pending invoices</>\r\n                        }\r\n                    </CRow>\r\n                </CCardBody>\r\n            </CCard>\r\n        )\r\n    }\r\n\r\n    const searchBar = () => {\r\n        return (\r\n            <CCard className=\"mb-4\">\r\n                <CCardHeader>\r\n                    <form>\r\n                        <CRow>\r\n                            <div className=\"col-sm-2\">\r\n                                <strong>Search Items</strong>\r\n                            </div>\r\n                            <div className=\"col-sm-4\">\r\n                                <CFormInput\r\n                                    value={searchTerm}\r\n                                    type=\"text\" onChange={changeTerm}\r\n                                    placeholder={`Search Items by - code/name/nickname`} />\r\n                            </div>\r\n                            <div className=\"col-sm-3\">\r\n                                <CButton color=\"primary\" type=\"submit\"\r\n                                    onClick={() => getItem()}\r\n                                >\r\n                                    Search\r\n                                </CButton>\r\n                                &nbsp;&nbsp;&nbsp;\r\n                                <CButton color=\"secondary\" type=\"button\"\r\n                                    onClick={clearSearch}\r\n                                >\r\n                                    Reset\r\n                                </CButton>\r\n                            </div>\r\n                        </CRow>\r\n                    </form>\r\n                </CCardHeader>\r\n            </CCard>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <CRow>\r\n                <CCol xs={12}>\r\n                    {searchBar()}\r\n                </CCol>\r\n                <CCol xs={12}>\r\n                    {results()}\r\n                </CCol>\r\n            </CRow>\r\n            <div className=\"row\">\r\n                {invoiceDetails.data[0] != undefined ? (\r\n                    <InvoiceDetailsModal\r\n                        invoice={invoiceDetails}\r\n                        payments={payments}\r\n                        show={show}\r\n                        handleClose={handleClose}\r\n                        isInvoice={false}\r\n                        isPaid={true}\r\n                        cb={getItem}\r\n                        finder={true}\r\n                    />\r\n                ) : (\r\n                    <></>\r\n                )}\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ItemFinder"],"sourceRoot":""}