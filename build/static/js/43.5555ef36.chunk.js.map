{"version":3,"sources":["assets/images/avatars/1.jpg","assets/images/avatars/2.jpg","assets/images/avatars/3.jpg","assets/images/avatars/4.jpg","assets/images/avatars/5.jpg","assets/images/avatars/6.jpg","views/dashboard/Dashboard.js"],"names":["WidgetsDropdown","lazy","WidgetsBrand","Dashboard","random","min","max","Math","floor","progressGroupExample2","title","icon","cilUser","value","cilUserFemale","progressGroupExample3","cibGoogle","percent","cibFacebook","cibTwitter","cibLinkedin","tableExample","avatar","src","avatar1","status","user","name","new","registered","country","flag","cifUs","usage","period","color","payment","cibCcMastercard","activity","avatar2","cifBr","cibCcVisa","avatar3","cifIn","cibCcStripe","avatar4","cifFr","cibCcPaypal","avatar5","cifEs","cibCcApplePay","avatar6","cifPl","cibCcAmex","className","sm","id","cilCloudDownload","map","active","style","height","marginTop","data","labels","datasets","label","backgroundColor","hexToRgba","getStyle","borderColor","pointHoverBackgroundColor","borderWidth","fill","borderDash","options","maintainAspectRatio","plugins","legend","display","scales","x","grid","drawOnChartArea","y","ticks","beginAtZero","maxTicksLimit","stepSize","ceil","elements","line","tension","point","radius","hitRadius","hoverRadius","hoverBorderWidth","xs","cols","md","item","index","thin","withCharts","xl","value1","value2","size","align","hover","responsive","cilPeople"],"mappings":"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","file":"static/js/43.5555ef36.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/1.34eedf58.jpg\";","export default __webpack_public_path__ + \"static/media/2.0c06e43d.jpg\";","export default __webpack_public_path__ + \"static/media/3.07e357f5.jpg\";","export default __webpack_public_path__ + \"static/media/4.3ddf28ab.jpg\";","export default __webpack_public_path__ + \"static/media/5.3e55ee5f.jpg\";","export default __webpack_public_path__ + \"static/media/6.edefb235.jpg\";","import React, { lazy } from 'react'\r\n\r\nimport {\r\n  CAvatar,\r\n  CButton,\r\n  CButtonGroup,\r\n  CCard,\r\n  CCardBody,\r\n  CCardFooter,\r\n  CCardHeader,\r\n  CCol,\r\n  CProgress,\r\n  CRow,\r\n  CTable,\r\n  CTableBody,\r\n  CTableDataCell,\r\n  CTableHead,\r\n  CTableHeaderCell,\r\n  CTableRow,\r\n} from '@coreui/react'\r\nimport { CChartLine } from '@coreui/react-chartjs'\r\nimport { getStyle, hexToRgba } from '@coreui/utils'\r\nimport CIcon from '@coreui/icons-react'\r\nimport {\r\n  cibCcAmex,\r\n  cibCcApplePay,\r\n  cibCcMastercard,\r\n  cibCcPaypal,\r\n  cibCcStripe,\r\n  cibCcVisa,\r\n  cibGoogle,\r\n  cibFacebook,\r\n  cibLinkedin,\r\n  cifBr,\r\n  cifEs,\r\n  cifFr,\r\n  cifIn,\r\n  cifPl,\r\n  cifUs,\r\n  cibTwitter,\r\n  cilCloudDownload,\r\n  cilPeople,\r\n  cilUser,\r\n  cilUserFemale,\r\n} from '@coreui/icons'\r\n\r\nimport avatar1 from 'src/assets/images/avatars/1.jpg'\r\nimport avatar2 from 'src/assets/images/avatars/2.jpg'\r\nimport avatar3 from 'src/assets/images/avatars/3.jpg'\r\nimport avatar4 from 'src/assets/images/avatars/4.jpg'\r\nimport avatar5 from 'src/assets/images/avatars/5.jpg'\r\nimport avatar6 from 'src/assets/images/avatars/6.jpg'\r\n\r\nconst WidgetsDropdown = lazy(() => import('../widgets/WidgetsDropdown.js'))\r\nconst WidgetsBrand = lazy(() => import('../widgets/WidgetsBrand.js'))\r\n\r\nconst Dashboard = () => {\r\n  const random = (min, max) => {\r\n    return Math.floor(Math.random() * (max - min + 1) + min)\r\n  }\r\n\r\n  const progressExample = [\r\n    { title: 'Visits', value: '29.703 Users', percent: 40, color: 'success' },\r\n    { title: 'Unique', value: '24.093 Users', percent: 20, color: 'info' },\r\n    { title: 'Pageviews', value: '78.706 Views', percent: 60, color: 'warning' },\r\n    { title: 'New Users', value: '22.123 Users', percent: 80, color: 'danger' },\r\n    { title: 'Bounce Rate', value: 'Average Rate', percent: 40.15, color: 'primary' },\r\n  ]\r\n\r\n  const progressGroupExample1 = [\r\n    { title: 'Monday', value1: 34, value2: 78 },\r\n    { title: 'Tuesday', value1: 56, value2: 94 },\r\n    { title: 'Wednesday', value1: 12, value2: 67 },\r\n    { title: 'Thursday', value1: 43, value2: 91 },\r\n    { title: 'Friday', value1: 22, value2: 73 },\r\n    { title: 'Saturday', value1: 53, value2: 82 },\r\n    { title: 'Sunday', value1: 9, value2: 69 },\r\n  ]\r\n\r\n  const progressGroupExample2 = [\r\n    { title: 'Male', icon: cilUser, value: 53 },\r\n    { title: 'Female', icon: cilUserFemale, value: 43 },\r\n  ]\r\n\r\n  const progressGroupExample3 = [\r\n    { title: 'Organic Search', icon: cibGoogle, percent: 56, value: '191,235' },\r\n    { title: 'Facebook', icon: cibFacebook, percent: 15, value: '51,223' },\r\n    { title: 'Twitter', icon: cibTwitter, percent: 11, value: '37,564' },\r\n    { title: 'LinkedIn', icon: cibLinkedin, percent: 8, value: '27,319' },\r\n  ]\r\n\r\n  const tableExample = [\r\n    {\r\n      avatar: { src: avatar1, status: 'success' },\r\n      user: {\r\n        name: 'Yiorgos Avraamu',\r\n        new: true,\r\n        registered: 'Jan 1, 2021',\r\n      },\r\n      country: { name: 'USA', flag: cifUs },\r\n      usage: {\r\n        value: 50,\r\n        period: 'Jun 11, 2021 - Jul 10, 2021',\r\n        color: 'success',\r\n      },\r\n      payment: { name: 'Mastercard', icon: cibCcMastercard },\r\n      activity: '10 sec ago',\r\n    },\r\n    {\r\n      avatar: { src: avatar2, status: 'danger' },\r\n      user: {\r\n        name: 'Avram Tarasios',\r\n        new: false,\r\n        registered: 'Jan 1, 2021',\r\n      },\r\n      country: { name: 'Brazil', flag: cifBr },\r\n      usage: {\r\n        value: 22,\r\n        period: 'Jun 11, 2021 - Jul 10, 2021',\r\n        color: 'info',\r\n      },\r\n      payment: { name: 'Visa', icon: cibCcVisa },\r\n      activity: '5 minutes ago',\r\n    },\r\n    {\r\n      avatar: { src: avatar3, status: 'warning' },\r\n      user: { name: 'Quintin Ed', new: true, registered: 'Jan 1, 2021' },\r\n      country: { name: 'India', flag: cifIn },\r\n      usage: {\r\n        value: 74,\r\n        period: 'Jun 11, 2021 - Jul 10, 2021',\r\n        color: 'warning',\r\n      },\r\n      payment: { name: 'Stripe', icon: cibCcStripe },\r\n      activity: '1 hour ago',\r\n    },\r\n    {\r\n      avatar: { src: avatar4, status: 'secondary' },\r\n      user: { name: 'Enéas Kwadwo', new: true, registered: 'Jan 1, 2021' },\r\n      country: { name: 'France', flag: cifFr },\r\n      usage: {\r\n        value: 98,\r\n        period: 'Jun 11, 2021 - Jul 10, 2021',\r\n        color: 'danger',\r\n      },\r\n      payment: { name: 'PayPal', icon: cibCcPaypal },\r\n      activity: 'Last month',\r\n    },\r\n    {\r\n      avatar: { src: avatar5, status: 'success' },\r\n      user: {\r\n        name: 'Agapetus Tadeáš',\r\n        new: true,\r\n        registered: 'Jan 1, 2021',\r\n      },\r\n      country: { name: 'Spain', flag: cifEs },\r\n      usage: {\r\n        value: 22,\r\n        period: 'Jun 11, 2021 - Jul 10, 2021',\r\n        color: 'primary',\r\n      },\r\n      payment: { name: 'Google Wallet', icon: cibCcApplePay },\r\n      activity: 'Last week',\r\n    },\r\n    {\r\n      avatar: { src: avatar6, status: 'danger' },\r\n      user: {\r\n        name: 'Friderik Dávid',\r\n        new: true,\r\n        registered: 'Jan 1, 2021',\r\n      },\r\n      country: { name: 'Poland', flag: cifPl },\r\n      usage: {\r\n        value: 43,\r\n        period: 'Jun 11, 2021 - Jul 10, 2021',\r\n        color: 'success',\r\n      },\r\n      payment: { name: 'Amex', icon: cibCcAmex },\r\n      activity: 'Last week',\r\n    },\r\n  ]\r\n\r\n  return (\r\n    <>\r\n      <WidgetsDropdown />\r\n      <CCard className=\"mb-4\">\r\n        <CCardBody>\r\n          <CRow>\r\n            <CCol sm={5}>\r\n              <h4 id=\"traffic\" className=\"card-title mb-0\">\r\n                Traffic\r\n              </h4>\r\n              <div className=\"small text-medium-emphasis\">January - July 2021</div>\r\n            </CCol>\r\n            <CCol sm={7} className=\"d-none d-md-block\">\r\n              <CButton color=\"primary\" className=\"float-end\">\r\n                <CIcon icon={cilCloudDownload} />\r\n              </CButton>\r\n              <CButtonGroup className=\"float-end me-3\">\r\n                {['Day', 'Month', 'Year'].map((value) => (\r\n                  <CButton\r\n                    color=\"outline-secondary\"\r\n                    key={value}\r\n                    className=\"mx-0\"\r\n                    active={value === 'Month'}\r\n                  >\r\n                    {value}\r\n                  </CButton>\r\n                ))}\r\n              </CButtonGroup>\r\n            </CCol>\r\n          </CRow>\r\n          <CChartLine\r\n            style={{ height: '300px', marginTop: '40px' }}\r\n            data={{\r\n              labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\r\n              datasets: [\r\n                {\r\n                  label: 'My First dataset',\r\n                  backgroundColor: hexToRgba(getStyle('--cui-info'), 10),\r\n                  borderColor: getStyle('--cui-info'),\r\n                  pointHoverBackgroundColor: getStyle('--cui-info'),\r\n                  borderWidth: 2,\r\n                  data: [\r\n                    random(50, 200),\r\n                    random(50, 200),\r\n                    random(50, 200),\r\n                    random(50, 200),\r\n                    random(50, 200),\r\n                    random(50, 200),\r\n                    random(50, 200),\r\n                  ],\r\n                  fill: true,\r\n                },\r\n                {\r\n                  label: 'My Second dataset',\r\n                  backgroundColor: 'transparent',\r\n                  borderColor: getStyle('--cui-success'),\r\n                  pointHoverBackgroundColor: getStyle('--cui-success'),\r\n                  borderWidth: 2,\r\n                  data: [\r\n                    random(50, 200),\r\n                    random(50, 200),\r\n                    random(50, 200),\r\n                    random(50, 200),\r\n                    random(50, 200),\r\n                    random(50, 200),\r\n                    random(50, 200),\r\n                  ],\r\n                },\r\n                {\r\n                  label: 'My Third dataset',\r\n                  backgroundColor: 'transparent',\r\n                  borderColor: getStyle('--cui-danger'),\r\n                  pointHoverBackgroundColor: getStyle('--cui-danger'),\r\n                  borderWidth: 1,\r\n                  borderDash: [8, 5],\r\n                  data: [65, 65, 65, 65, 65, 65, 65],\r\n                },\r\n              ],\r\n            }}\r\n            options={{\r\n              maintainAspectRatio: false,\r\n              plugins: {\r\n                legend: {\r\n                  display: false,\r\n                },\r\n              },\r\n              scales: {\r\n                x: {\r\n                  grid: {\r\n                    drawOnChartArea: false,\r\n                  },\r\n                },\r\n                y: {\r\n                  ticks: {\r\n                    beginAtZero: true,\r\n                    maxTicksLimit: 5,\r\n                    stepSize: Math.ceil(250 / 5),\r\n                    max: 250,\r\n                  },\r\n                },\r\n              },\r\n              elements: {\r\n                line: {\r\n                  tension: 0.4,\r\n                },\r\n                point: {\r\n                  radius: 0,\r\n                  hitRadius: 10,\r\n                  hoverRadius: 4,\r\n                  hoverBorderWidth: 3,\r\n                },\r\n              },\r\n            }}\r\n          />\r\n        </CCardBody>\r\n        <CCardFooter>\r\n          <CRow xs={{ cols: 1 }} md={{ cols: 5 }} className=\"text-center\">\r\n            {progressExample.map((item, index) => (\r\n              <CCol className=\"mb-sm-2 mb-0\" key={index}>\r\n                <div className=\"text-medium-emphasis\">{item.title}</div>\r\n                <strong>\r\n                  {item.value} ({item.percent}%)\r\n                </strong>\r\n                <CProgress thin className=\"mt-2\" color={item.color} value={item.percent} />\r\n              </CCol>\r\n            ))}\r\n          </CRow>\r\n        </CCardFooter>\r\n      </CCard>\r\n\r\n      <WidgetsBrand withCharts />\r\n\r\n      <CRow>\r\n        <CCol xs>\r\n          <CCard className=\"mb-4\">\r\n            <CCardHeader>Traffic {' & '} Sales</CCardHeader>\r\n            <CCardBody>\r\n              <CRow>\r\n                <CCol xs={12} md={6} xl={6}>\r\n                  <CRow>\r\n                    <CCol sm={6}>\r\n                      <div className=\"border-start border-start-4 border-start-info py-1 px-3\">\r\n                        <div className=\"text-medium-emphasis small\">New Clients</div>\r\n                        <div className=\"fs-5 fw-semibold\">9,123</div>\r\n                      </div>\r\n                    </CCol>\r\n                    <CCol sm={6}>\r\n                      <div className=\"border-start border-start-4 border-start-danger py-1 px-3 mb-3\">\r\n                        <div className=\"text-medium-emphasis small\">Recurring Clients</div>\r\n                        <div className=\"fs-5 fw-semibold\">22,643</div>\r\n                      </div>\r\n                    </CCol>\r\n                  </CRow>\r\n\r\n                  <hr className=\"mt-0\" />\r\n                  {progressGroupExample1.map((item, index) => (\r\n                    <div className=\"progress-group mb-4\" key={index}>\r\n                      <div className=\"progress-group-prepend\">\r\n                        <span className=\"text-medium-emphasis small\">{item.title}</span>\r\n                      </div>\r\n                      <div className=\"progress-group-bars\">\r\n                        <CProgress thin color=\"info\" value={item.value1} />\r\n                        <CProgress thin color=\"danger\" value={item.value2} />\r\n                      </div>\r\n                    </div>\r\n                  ))}\r\n                </CCol>\r\n\r\n                <CCol xs={12} md={6} xl={6}>\r\n                  <CRow>\r\n                    <CCol sm={6}>\r\n                      <div className=\"border-start border-start-4 border-start-warning py-1 px-3 mb-3\">\r\n                        <div className=\"text-medium-emphasis small\">Pageviews</div>\r\n                        <div className=\"fs-5 fw-semibold\">78,623</div>\r\n                      </div>\r\n                    </CCol>\r\n                    <CCol sm={6}>\r\n                      <div className=\"border-start border-start-4 border-start-success py-1 px-3 mb-3\">\r\n                        <div className=\"text-medium-emphasis small\">Organic</div>\r\n                        <div className=\"fs-5 fw-semibold\">49,123</div>\r\n                      </div>\r\n                    </CCol>\r\n                  </CRow>\r\n\r\n                  <hr className=\"mt-0\" />\r\n\r\n                  {progressGroupExample2.map((item, index) => (\r\n                    <div className=\"progress-group mb-4\" key={index}>\r\n                      <div className=\"progress-group-header\">\r\n                        <CIcon className=\"me-2\" icon={item.icon} size=\"lg\" />\r\n                        <span>{item.title}</span>\r\n                        <span className=\"ms-auto fw-semibold\">{item.value}%</span>\r\n                      </div>\r\n                      <div className=\"progress-group-bars\">\r\n                        <CProgress thin color=\"warning\" value={item.value} />\r\n                      </div>\r\n                    </div>\r\n                  ))}\r\n\r\n                  <div className=\"mb-5\"></div>\r\n\r\n                  {progressGroupExample3.map((item, index) => (\r\n                    <div className=\"progress-group\" key={index}>\r\n                      <div className=\"progress-group-header\">\r\n                        <CIcon className=\"me-2\" icon={item.icon} size=\"lg\" />\r\n                        <span>{item.title}</span>\r\n                        <span className=\"ms-auto fw-semibold\">\r\n                          {item.value}{' '}\r\n                          <span className=\"text-medium-emphasis small\">({item.percent}%)</span>\r\n                        </span>\r\n                      </div>\r\n                      <div className=\"progress-group-bars\">\r\n                        <CProgress thin color=\"success\" value={item.percent} />\r\n                      </div>\r\n                    </div>\r\n                  ))}\r\n                </CCol>\r\n              </CRow>\r\n\r\n              <br />\r\n\r\n              <CTable align=\"middle\" className=\"mb-0 border\" hover responsive>\r\n                <CTableHead color=\"light\">\r\n                  <CTableRow>\r\n                    <CTableHeaderCell className=\"text-center\">\r\n                      <CIcon icon={cilPeople} />\r\n                    </CTableHeaderCell>\r\n                    <CTableHeaderCell>User</CTableHeaderCell>\r\n                    <CTableHeaderCell className=\"text-center\">Country</CTableHeaderCell>\r\n                    <CTableHeaderCell>Usage</CTableHeaderCell>\r\n                    <CTableHeaderCell className=\"text-center\">Payment Method</CTableHeaderCell>\r\n                    <CTableHeaderCell>Activity</CTableHeaderCell>\r\n                  </CTableRow>\r\n                </CTableHead>\r\n                <CTableBody>\r\n                  {tableExample.map((item, index) => (\r\n                    <CTableRow v-for=\"item in tableItems\" key={index}>\r\n                      <CTableDataCell className=\"text-center\">\r\n                        <CAvatar size=\"md\" src={item.avatar.src} status={item.avatar.status} />\r\n                      </CTableDataCell>\r\n                      <CTableDataCell>\r\n                        <div>{item.user.name}</div>\r\n                        <div className=\"small text-medium-emphasis\">\r\n                          <span>{item.user.new ? 'New' : 'Recurring'}</span> | Registered:{' '}\r\n                          {item.user.registered}\r\n                        </div>\r\n                      </CTableDataCell>\r\n                      <CTableDataCell className=\"text-center\">\r\n                        <CIcon size=\"xl\" icon={item.country.flag} title={item.country.name} />\r\n                      </CTableDataCell>\r\n                      <CTableDataCell>\r\n                        <div className=\"clearfix\">\r\n                          <div className=\"float-start\">\r\n                            <strong>{item.usage.value}%</strong>\r\n                          </div>\r\n                          <div className=\"float-end\">\r\n                            <small className=\"text-medium-emphasis\">{item.usage.period}</small>\r\n                          </div>\r\n                        </div>\r\n                        <CProgress thin color={item.usage.color} value={item.usage.value} />\r\n                      </CTableDataCell>\r\n                      <CTableDataCell className=\"text-center\">\r\n                        <CIcon size=\"xl\" icon={item.payment.icon} />\r\n                      </CTableDataCell>\r\n                      <CTableDataCell>\r\n                        <div className=\"small text-medium-emphasis\">Last login</div>\r\n                        <strong>{item.activity}</strong>\r\n                      </CTableDataCell>\r\n                    </CTableRow>\r\n                  ))}\r\n                </CTableBody>\r\n              </CTable>\r\n            </CCardBody>\r\n          </CCard>\r\n        </CCol>\r\n      </CRow>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Dashboard\r\n"],"sourceRoot":""}