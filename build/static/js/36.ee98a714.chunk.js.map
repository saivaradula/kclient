{"version":3,"sources":["components/product/QRCode.js","components/product/addProduct.js"],"names":["QrCode","props","options","ecLevel","enableCORS","size","quietZone","bgColor","fgColor","logoImage","logoWidth","logoHeight","logoOpacity","qrStyle","value","url","require","config","AddProducts","validated","setValidated","useState","history","useHistory","code","setCode","name","setName","sname","setSName","brand","setBrand","category","setCategory","subCategory","setSubCategory","cost","setCost","price","setPrice","quantity","setQuantity","alertNum","setAlertNum","model","setModel","prType","setPrType","unit","setUnit","godawn","setGodawn","prodImage","setProdImage","categoryList","setCategoryList","resultLoaded","setResultLoaded","loading","setLoading","useEffect","axios","get","process","then","data","getFirstLetter","words","match","join","toUpperCase","className","noValidate","onSubmit","e","event","preventDefault","currentTarget","checkValidity","console","log","stopPropagation","payLoad","subcategory","prtype","godawan","post","response","status","push","handleSubmit","xs","htmlFor","length","required","id","onChange","target","setC","map","c","invalid","type","autocomplete","onBlur","categoryFL","fLetters","res","setSubC","placeholder","readOnly","maxlength","i","parseInt","parseFloat","toFixed","updateFinalPrice","disabled","style","float","width","height","img","Image","canvas","document","getElementById","ctx","getContext","onload","iw","ih","scale","Math","min","iwScaled","ihScaled","drawImage","imageCode","toDataURL","src","URL","createObjectURL","files","color"],"mappings":"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","file":"static/js/36.ee98a714.chunk.js","sourcesContent":["import React from 'react'\r\nimport { QRCode } from 'react-qrcode-logo'\r\n\r\nexport default function QrCode(props) {\r\n  const defaultOptions = {\r\n    ecLevel: 'M',\r\n    enableCORS: false,\r\n    size: 150,\r\n    quietZone: 10,\r\n    bgColor: '#FFFFFF',\r\n    fgColor: '#000000',\r\n    logoImage: '',\r\n    logoWidth: 30,\r\n    logoHeight: 30,\r\n    logoOpacity: 1,\r\n    qrStyle: 'squares',\r\n  }\r\n\r\n  const options = { ...defaultOptions, ...props.options }\r\n\r\n  return <QRCode value={props.url} {...options} />\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nimport axios from 'axios'\r\nrequire('dotenv').config()\r\n\r\nimport QrCode from './QRCode'\r\nimport Barcode from 'react-barcode'\r\n\r\nimport {\r\n  CButton,\r\n  CCard,\r\n  CCardBody,\r\n  CCardHeader,\r\n  CCol,\r\n  CForm,\r\n  CFormInput,\r\n  CFormLabel,\r\n  CFormSelect,\r\n  CFormFeedback,\r\n  CRow,\r\n} from '@coreui/react'\r\n\r\nconst AddProducts = (props) => {\r\n  const [validated, setValidated] = useState(false)\r\n  const history = useHistory()\r\n  const [code, setCode] = useState('')\r\n  const [name, setName] = useState('')\r\n  const [sname, setSName] = useState('')\r\n  const [brand, setBrand] = useState('')\r\n  const [category, setCategory] = useState('')\r\n  const [subCategory, setSubCategory] = useState('')\r\n  const [cost, setCost] = useState(0)\r\n  const [price, setPrice] = useState(0)\r\n  const [quantity, setQuantity] = useState('')\r\n  const [alertNum, setAlertNum] = useState(1)\r\n  const [model, setModel] = useState('')\r\n  const [prType, setPrType] = useState('')\r\n  const [unit, setUnit] = useState('unit')\r\n  const [godawn, setGodawn] = useState(1)\r\n\r\n  const [prodImage, setProdImage] = useState('')\r\n  const [categoryList, setCategoryList] = useState([])\r\n  const [resultLoaded, setResultLoaded] = useState(false)\r\n  const [loading, setLoading] = useState(true)\r\n\r\n  const getCategories = () => {\r\n    axios.get(`${process.env.REACT_APP_API_URL}/category`).then((data) => {\r\n      setCategoryList(data.data)\r\n      setResultLoaded(true)\r\n      // setLoading(false)\r\n    })\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (resultLoaded === false) {\r\n      getCategories()\r\n    }\r\n  })\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault()\r\n    const form = event.currentTarget\r\n    if (form.checkValidity() === false) {\r\n      console.log(\"should be here...\")\r\n      console.log(event)\r\n      event.preventDefault()\r\n      event.stopPropagation()\r\n      setValidated(false)\r\n    }\r\n\r\n    setValidated(true)\r\n    setLoading(true)\r\n\r\n    if (code && name && sname && brand && category && subCategory && quantity) {\r\n      let payLoad = {\r\n        code: code,\r\n        name: name,\r\n        sname: sname,\r\n        brand: brand,\r\n        category: category,\r\n        subcategory: subCategory,\r\n        cost: cost,\r\n        price: price,\r\n        quantity: quantity,\r\n        alertNum: alertNum,\r\n        prodImage: prodImage,\r\n        model: model,\r\n        prtype: prType,\r\n        unit: unit,\r\n        godawan: godawn,\r\n      }\r\n\r\n      axios.post(`${process.env.REACT_APP_API_URL}/products/add`, payLoad).then((response) => {\r\n        if (response.status === 200) {\r\n          history.push('/products/list/1')\r\n        }\r\n      })\r\n    }\r\n  }\r\n\r\n  const arrayBufferToBase64 = (buffer) => {\r\n    let binary = '';\r\n    let bytes = [].slice.call(new Uint8Array(buffer));\r\n    bytes.forEach((b) => binary += String.fromCharCode(b));\r\n    return window.btoa(binary);\r\n  };\r\n\r\n  const create_src = (type, buffer) => {\r\n    let base64Flag = 'data:image/' + type + ';base64,';\r\n    let base64string = arrayBufferToBase64(buffer);\r\n    let result = base64Flag + base64string;\r\n    return result;\r\n  }\r\n\r\n  const baseImage = (e) => {\r\n    let img = new Image;\r\n    let canvas = document.getElementById(\"canvas\");\r\n    let ctx = canvas.getContext(\"2d\");\r\n    let maxW = 512;\r\n    let maxH = 512;\r\n    img.onload = () => {\r\n      let iw = img.width;\r\n      let ih = img.height;\r\n      let scale = Math.min((maxW / iw), (maxH / ih));\r\n      let iwScaled = iw * scale;\r\n      let ihScaled = ih * scale;\r\n      canvas.width = iwScaled;\r\n      canvas.height = ihScaled;\r\n      ctx.drawImage(img, 0, 0, iwScaled, ihScaled);\r\n      let imageCode = canvas.toDataURL(\"image/jpeg\", 0.5);\r\n      setProdImage(imageCode)\r\n    }\r\n    img.src = URL.createObjectURL(e.target.files[0]);\r\n  }\r\n\r\n  const changeCode = (e) => {\r\n    // setCode(e.target.value)\r\n  }\r\n\r\n  const listOptions = () => {\r\n    return categoryList.map((c) => <option value={c.name}>{c.name}</option>)\r\n  }\r\n\r\n  const updateFinalPrice = (e) => {\r\n    let c = parseInt(e.target.value);\r\n    setCost(c)\r\n    c = parseFloat(c + (c * 0.1)).toFixed(2)\r\n    setPrice(c)\r\n  }\r\n\r\n  const getFirstLetter = (words) => {\r\n    let matches = words.match(/\\b(\\w)/g);\r\n    return matches.join('').toUpperCase();\r\n  }\r\n\r\n  const setC = (e) => {\r\n    setCategory(e.target.value)\r\n    setSubCategory('')\r\n  }\r\n\r\n  const setSubC = (e) => {\r\n    setLoading(true)\r\n    setCode('')\r\n    let categoryFL = getFirstLetter(category)\r\n    let fLetters = getFirstLetter(e.target.value);\r\n    setSubCategory(e.target.value)\r\n    fLetters = categoryFL + fLetters;\r\n    axios.get(`${process.env.REACT_APP_API_URL}/products/getNextCode/${fLetters}`).then((res) => {\r\n      setCode(res.data);\r\n      setLoading(false)\r\n    })\r\n  }\r\n\r\n  const printGodawns = [\r\n    1, 2, 3, 4, 5, 6, 7, 8, 9, 10\r\n  ]\r\n\r\n  return setResultLoaded ? (\r\n    <CForm\r\n      className=\"row g-3 needs-validation\"\r\n      noValidate\r\n      validated={validated}\r\n      onSubmit={(e) => handleSubmit(e)}\r\n    >\r\n      <CRow>\r\n        <CCol xs={12}>\r\n          <CCard className=\"mb-4\">\r\n            <CCardHeader>\r\n              <strong>Add Products to Store</strong>\r\n            </CCardHeader>\r\n            <CCardBody>\r\n              <CRow className=\"mb-4\">\r\n                <div className=\"col-sm-1\">\r\n                  <CFormLabel htmlFor=\"category\" className=\"col-form-label\">\r\n                    Category\r\n                  </CFormLabel>\r\n                </div>\r\n                <div className=\"col-sm-3\">\r\n                  {categoryList.length ? (\r\n                    <CFormSelect\r\n                      required\r\n                      id=\"category\"\r\n                      onChange={(e) => setC(e)}\r\n                    >\r\n                      <option value=\"\">Choose Category</option>\r\n                      {listOptions()}\r\n                    </CFormSelect>\r\n                  ) : (\r\n                    <></>\r\n                  )}\r\n                  <CFormFeedback invalid>Please Select category.</CFormFeedback>\r\n                </div>\r\n                <div className=\"col-sm-1\">\r\n                  <CFormLabel htmlFor=\"subcategory\" className=\"col-form-label\">\r\n                    Sub-Category\r\n                  </CFormLabel>\r\n                </div>\r\n                <div className=\"col-sm-3\">\r\n                  <CFormInput\r\n                    type=\"text\"\r\n                    autocomplete=\"off\"\r\n                    id=\"subcategory\"\r\n                    onChange={() => setLoading(true)}\r\n                    onBlur={(e) => setSubC(e)}\r\n                    placeholder=\"Enter Sub Category\"\r\n                  />\r\n                </div>\r\n                <div className=\"col-sm-1\">\r\n                  <CFormLabel htmlFor=\"productCode\" className=\"col-form-label\">\r\n                    code\r\n                  </CFormLabel>\r\n                </div>\r\n                <div className=\"col-sm-3\">\r\n                  <CFormInput\r\n                    required\r\n                    readOnly\r\n                    value={code}\r\n                    autocomplete=\"off\"\r\n                    type=\"text\"\r\n                    id=\"productCode\"\r\n                    // onChange={changeCode}\r\n                    placeholder=\"Enter Product Code(Ex: PR-12345)\"\r\n                  />\r\n                  <CFormFeedback invalid>Please provide product code.</CFormFeedback>\r\n                </div>\r\n              </CRow>\r\n              <CRow className=\"mt-2 mb-4\">\r\n                <div className=\"col-sm-1\">\r\n                  <CFormLabel htmlFor=\"productName\" className=\"col-form-label\">\r\n                    Name\r\n                  </CFormLabel>\r\n                </div>\r\n                <div className=\"col-sm-3\">\r\n                  <CFormInput\r\n                    required\r\n                    autocomplete=\"off\"\r\n                    type=\"text\"\r\n                    id=\"productName\"\r\n                    onChange={(e) => { setLoading(false); setName(e.target.value) }}\r\n                    placeholder=\"Enter Product Name\"\r\n                  />\r\n                  <CFormFeedback invalid>Please enter product name.</CFormFeedback>\r\n                </div>\r\n                <div className=\"col-sm-1\">\r\n                  <CFormLabel htmlFor=\"productName\" className=\"col-form-label\">\r\n                    NickName\r\n                  </CFormLabel>\r\n                </div>\r\n                <div className=\"col-sm-3\">\r\n                  <CFormInput\r\n                    required\r\n                    autocomplete=\"off\"\r\n                    type=\"text\"\r\n                    maxlength=\"25\"\r\n                    id=\"productName\"\r\n                    onChange={(e) => { setLoading(false); setSName(e.target.value) }}\r\n                    placeholder=\"Enter Product Nick(Short) Name\"\r\n                  />\r\n                  <CFormFeedback invalid>Please enter product name.</CFormFeedback>\r\n                </div>\r\n                <div className=\"col-sm-1\">\r\n                  <CFormLabel htmlFor=\"prtype\" className=\"col-form-label\">\r\n                    Pr.Type\r\n                  </CFormLabel>\r\n                </div>\r\n                <div className=\"col-sm-3\">\r\n                  <CFormSelect required id=\"prtype\" onChange={(e) => { setLoading(false); setPrType(e.target.value) }}>\r\n                    <option value=\"\">Choose...</option>\r\n                    <option value=\"new\">New</option>\r\n                    <option value=\"used\">Used</option>\r\n                    <option value=\"antique\">Antique</option>\r\n                    <option value=\"damage\">Damaged</option>\r\n                  </CFormSelect>\r\n                  <CFormFeedback invalid>Please select product type.</CFormFeedback>\r\n                </div>\r\n              </CRow>\r\n              <CRow className=\"mt-2 mb-4\">\r\n                <div className=\"col-sm-1\">\r\n                  <CFormLabel htmlFor=\"model\" className=\"col-form-label\">\r\n                    Brand\r\n                  </CFormLabel>\r\n                </div>\r\n                <div className=\"col-sm-3\">\r\n                  <CFormInput\r\n                    required\r\n                    autocomplete=\"off\"\r\n                    type=\"text\"\r\n                    id=\"model\"\r\n                    onChange={(e) => { setLoading(false); setModel(e.target.value) }}\r\n                    placeholder=\"Enter Brand\"\r\n                  />\r\n                  <CFormFeedback invalid>Please enter model.</CFormFeedback>\r\n                </div>\r\n                <div className=\"col-sm-1\">\r\n                  <CFormLabel htmlFor=\"brandName\" className=\"col-form-label\">\r\n                    Size\r\n                  </CFormLabel>\r\n                </div>\r\n                <div className=\"col-sm-3\">\r\n                  <CFormInput\r\n                    type=\"text\"\r\n                    autocomplete=\"off\"\r\n                    id=\"brandName\"\r\n                    onChange={(e) => setBrand(e.target.value)}\r\n                    placeholder=\"Enter Size\"\r\n                  />\r\n                  <CFormFeedback invalid>Please enter Brand.</CFormFeedback>\r\n                </div>\r\n                <div className=\"col-sm-1\">\r\n                  <CFormLabel htmlFor=\"unitchange\" className=\"col-form-label\">\r\n                    Unit\r\n                  </CFormLabel>\r\n                </div>\r\n                <div className=\"col-sm-3\">\r\n                  <CFormInput\r\n                    type=\"text\"\r\n                    autocomplete=\"off\"\r\n                    id=\"unitchange\"\r\n                    onChange={(e) => setUnit(e.target.value)}\r\n                    placeholder=\"Unit. Eg: Kgs/Dozens\"\r\n                  />\r\n                </div>\r\n              </CRow>\r\n              <hr />\r\n              <CRow className=\"mb-4\">\r\n                <div className=\"col\">\r\n                  <CFormSelect required id=\"godown\"\r\n                    onChange={(e) => setGodawn(e.target.value)}>\r\n                    {printGodawns.map(i => <option value={i}>Godown - {i}</option>)}\r\n                  </CFormSelect>\r\n                </div>\r\n                <div className=\"col\">\r\n                  <CFormInput\r\n                    type=\"number\"\r\n                    autocomplete=\"off\"\r\n                    id=\"cost\"\r\n                    required\r\n                    value={cost}\r\n                    onChange={(e) => { setLoading(false); updateFinalPrice(e) }}\r\n                    placeholder=\"Purchase Price\"\r\n                  />\r\n                </div>\r\n                <div className=\"col\">\r\n                  <CFormInput\r\n                    type=\"number\"\r\n                    autocomplete=\"off\"\r\n                    id=\"price\"\r\n                    required\r\n                    value={price}\r\n                    disabled\r\n                    placeholder=\"Final Price \"\r\n                  />\r\n                </div>\r\n                <div className=\"col\">\r\n                  <CFormInput\r\n                    type=\"number\"\r\n                    autocomplete=\"off\"\r\n                    required\r\n                    id=\"quantity\"\r\n                    onChange={(e) => { setLoading(false); setQuantity(e.target.value) }}\r\n                    placeholder=\"Enter Quantity\"\r\n                  />\r\n                </div>\r\n                <div className=\"col\">\r\n                  <CFormInput\r\n                    type=\"number\"\r\n                    autocomplete=\"off\"\r\n                    id=\"alert\"\r\n                    value={alertNum}\r\n                    onChange={(e) => setAlertNum(e.target.value)}\r\n                    placeholder=\"Enter Alerting Quantity\"\r\n                  />\r\n                </div>\r\n              </CRow>\r\n            </CCardBody>\r\n          </CCard>\r\n        </CCol>\r\n      </CRow>\r\n      <CRow>\r\n        <CCol xs={12}>\r\n          <CCard className=\"\">\r\n            <CCardHeader>\r\n              <strong>Product Image and QR/Bar Codes</strong>\r\n            </CCardHeader>\r\n            <CCardBody>\r\n              <div className=\"col-sm-4 mr-2\" style={{ float: 'left' }}>\r\n                <CCard className=\"\">\r\n                  <CCardHeader>\r\n                    <strong>Product Image</strong>\r\n                  </CCardHeader>\r\n                  <CCardBody>\r\n                    <div className=\"\">\r\n                      <div className=\"text-center\">\r\n                        {/* {prodImage !== '' ? (\r\n                          <img src={prodImage} alt=\"Product Image\" width={150} height={150} />\r\n                        ) : (\r\n                          ''\r\n                        )} */}\r\n\r\n                        <canvas id=\"canvas\" width=\"64\" height=\"64\"></canvas>\r\n\r\n                      </div>\r\n                      <div>\r\n                        <input\r\n                          type=\"file\"\r\n                          id=\"input\"\r\n                          onChange={baseImage}\r\n                          className=\"mb-4 mt-4 form-control\"\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </CCardBody>\r\n                </CCard>\r\n              </div>\r\n              <div className=\"col-sm-4\" style={{ float: 'left' }}>\r\n                <CCard className=\"\">\r\n                  <CCardHeader>\r\n                    <strong>Product QR Code</strong>\r\n                  </CCardHeader>\r\n                  <CCardBody>\r\n                    <div className=\"text-center\">\r\n                      {code !== '' ? (\r\n                        <QrCode url={code} />\r\n                      ) : (\r\n                        <div>Enter Product Code to get QR Code</div>\r\n                      )}\r\n                    </div>\r\n                  </CCardBody>\r\n                </CCard>\r\n              </div>\r\n              <div className=\"col-sm-4\" style={{ float: 'right' }}>\r\n                <CCard className=\"\">\r\n                  <CCardHeader>\r\n                    <strong>Product Bar Code</strong>\r\n                  </CCardHeader>\r\n                  <CCardBody>\r\n                    <div className=\"text-center\">\r\n                      {code !== '' ? (\r\n                        <Barcode value={code} width=\"2\" height=\"40\" />\r\n                      ) : (\r\n                        <div>Enter Product Code to get Bar Code</div>\r\n                      )}\r\n                    </div>\r\n                  </CCardBody>\r\n                </CCard>\r\n              </div>\r\n            </CCardBody>\r\n          </CCard>\r\n        </CCol>\r\n      </CRow>\r\n      <hr />\r\n      <CCol xs={12} className=\"text-right\">\r\n        <CRow className=\"mb-4 text-right\">\r\n          <div className=\"col-sm-1\">\r\n            <CButton color=\"secondary\" type=\"reset\">\r\n              Clear\r\n            </CButton>\r\n          </div>\r\n          <div className=\"col-sm-3\">\r\n            {\r\n              loading ?\r\n                <CButton color=\"secondary\" type=\"button\" disabled>\r\n                  Add Product\r\n                </CButton>\r\n                :\r\n                <CButton color=\"primary\" type=\"submit\">\r\n                  Add Product\r\n                </CButton>\r\n            }\r\n          </div>\r\n        </CRow>\r\n      </CCol>\r\n    </CForm>\r\n  ) : (\r\n    <></>\r\n  )\r\n}\r\n\r\nexport default AddProducts\r\n"],"sourceRoot":""}