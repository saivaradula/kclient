{"version":3,"sources":["../node_modules/dotenv/lib/main.js","components/product/QRCode.js","../node_modules/path-browserify/index.js","../node_modules/os-browserify/browser.js","components/product/printPR.js"],"names":["fs","require","path","os","log","message","console","RE_INI_KEY_VAL","RE_NEWLINES","NEWLINES_MATCH","parse","src","options","debug","Boolean","obj","toString","split","forEach","line","idx","keyValueArr","match","key","val","end","length","isDoubleQuoted","substring","replace","trim","module","exports","config","dotenvPath","resolve","process","cwd","encoding","envPath","join","homedir","slice","parsed","readFileSync","Object","keys","prototype","hasOwnProperty","call","e","error","QrCode","props","ecLevel","enableCORS","size","quietZone","bgColor","fgColor","logoImage","logoWidth","logoHeight","logoOpacity","qrStyle","value","url","normalizeArray","parts","allowAboveRoot","up","i","last","splice","unshift","filter","xs","f","res","push","resolvedPath","resolvedAbsolute","arguments","TypeError","charAt","p","normalize","isAbsolute","trailingSlash","substr","paths","Array","index","relative","from","to","arr","start","fromParts","toParts","Math","min","samePartsLength","outputParts","concat","sep","delimiter","dirname","code","charCodeAt","hasRoot","matchedSlash","basename","ext","extname","startDot","startPart","preDotState","str","len","endianness","hostname","location","loadavg","uptime","freemem","Number","MAX_VALUE","totalmem","cpus","type","release","navigator","appVersion","networkInterfaces","getNetworkInterfaces","arch","platform","tmpdir","tmpDir","EOL","printPR","history","useHistory","printingOptions","setPrintingOptions","useState","resultLoaded","setResultLoaded","productId","params","id","qrCode","setQRCode","barCode","setBarCode","arrChecked","setArrChecked","useEffect","singlePrintPage","setPrinting","event","target","checked","newArr","localStorage","setItem","JSON","stringify","k","name","getItem","price","doPrint","className","onChange","color","onClick"],"mappings":"iKAAA,YAuBA,MAAMA,EAAKC,EAAQ,KACbC,EAAOD,EAAQ,KACfE,EAAKF,EAAQ,KAEnB,SAASG,EAAKC,GACZC,QAAQF,IAAR,0BAA+BC,IAGjC,MACME,EAAiB,gCACjBC,EAAc,OACdC,EAAiB,aAGvB,SAASC,EAAOC,EAA4BC,GAC1C,MAAMC,EAAQC,QAAQF,GAAWA,EAAQC,OACnCE,EAAM,GAkCZ,OA/BAJ,EAAIK,WAAWC,MAAMR,GAAgBS,SAAQ,SAAUC,EAAMC,GAE3D,MAAMC,EAAcF,EAAKG,MAAMf,GAE/B,GAAmB,MAAfc,EAAqB,CACvB,MAAME,EAAMF,EAAY,GAExB,IAAIG,EAAOH,EAAY,IAAM,GAC7B,MAAMI,EAAMD,EAAIE,OAAS,EACnBC,EAA4B,MAAXH,EAAI,IAA2B,MAAbA,EAAIC,GACX,MAAXD,EAAI,IAA2B,MAAbA,EAAIC,IAGvBE,GACpBH,EAAMA,EAAII,UAAU,EAAGH,GAGnBE,IACFH,EAAMA,EAAIK,QAAQrB,EA7BZ,QAiCRgB,EAAMA,EAAIM,OAGZf,EAAIQ,GAAOC,OACFX,GACTT,EAAI,iDAAD,OAAkDgB,EAAM,EAAxD,aAA8DD,OAI9DJ,EA2CTgB,EAAOC,QAAQC,OAnCf,SAAiBrB,GACf,IAAIsB,EAAahC,EAAKiC,QAAQC,EAAQC,MAAO,QACzCC,EAAyB,OACzBzB,GAAQ,EARd,IAAsB0B,EAUhB3B,IACkB,MAAhBA,EAAQV,OACVgC,EAXkB,OADFK,EAYS3B,EAAQV,MAXtB,GAAaA,EAAKsC,KAAKrC,EAAGsC,UAAWF,EAAQG,MAAM,IAAMH,GAa9C,MAApB3B,EAAQ0B,WACVA,EAAW1B,EAAQ0B,UAEA,MAAjB1B,EAAQC,QACVA,GAAQ,IAIZ,IAEE,MAAM8B,EAASjC,EAAMV,EAAG4C,aAAaV,EAAY,CAAEI,aAAa,CAAEzB,UAUlE,OARAgC,OAAOC,KAAKH,GAAQzB,SAAQ,SAAUK,GAC/BsB,OAAOE,UAAUC,eAAeC,KAAKb,iLAAab,GAE5CV,GACTT,EAAI,IAAD,OAAKmB,EAAL,sEAFHa,iLAAYb,GAAOoB,EAAOpB,MAMvB,CAAEoB,UACT,MAAOO,GACP,MAAO,CAAEC,MAAOD,KAKpBnB,EAAOC,QAAQtB,MAAQA,I,oDCrHvB,2DAGe,SAAS0C,EAAOC,GAC7B,MAcMzC,EAAU,CAbd0C,QAAS,IACTC,YAAY,EACZC,KAAM,IACNC,UAAW,GACXC,QAAS,UACTC,QAAS,UACTC,UAAW,GACXC,UAAW,GACXC,WAAY,GACZC,YAAa,EACbC,QAAS,aAG6BX,EAAMzC,SAE9C,OAAO,cAAC,SAAD,CAAQqD,MAAOZ,EAAMa,OAAStD,M,yCCpBvC,YA4BA,SAASuD,EAAeC,EAAOC,GAG7B,IADA,IAAIC,EAAK,EACAC,EAAIH,EAAM1C,OAAS,EAAG6C,GAAK,EAAGA,IAAK,CAC1C,IAAIC,EAAOJ,EAAMG,GACJ,MAATC,EACFJ,EAAMK,OAAOF,EAAG,GACE,OAATC,GACTJ,EAAMK,OAAOF,EAAG,GAChBD,KACSA,IACTF,EAAMK,OAAOF,EAAG,GAChBD,KAKJ,GAAID,EACF,KAAOC,IAAMA,EACXF,EAAMM,QAAQ,MAIlB,OAAON,EA0OT,SAASO,EAAQC,EAAIC,GACjB,GAAID,EAAGD,OAAQ,OAAOC,EAAGD,OAAOE,GAEhC,IADA,IAAIC,EAAM,GACDP,EAAI,EAAGA,EAAIK,EAAGlD,OAAQ6C,IACvBM,EAAED,EAAGL,GAAIA,EAAGK,IAAKE,EAAIC,KAAKH,EAAGL,IAErC,OAAOO,EA3OX9C,EAAQG,QAAU,WAIhB,IAHA,IAAI6C,EAAe,GACfC,GAAmB,EAEdV,EAAIW,UAAUxD,OAAS,EAAG6C,IAAM,IAAMU,EAAkBV,IAAK,CACpE,IAAIrE,EAAQqE,GAAK,EAAKW,UAAUX,GAAKnC,EAAQC,MAG7C,GAAoB,kBAATnC,EACT,MAAM,IAAIiF,UAAU,6CACVjF,IAIZ8E,EAAe9E,EAAO,IAAM8E,EAC5BC,EAAsC,MAAnB/E,EAAKkF,OAAO,IAWjC,OAASH,EAAmB,IAAM,KAJlCD,EAAeb,EAAeQ,EAAOK,EAAa/D,MAAM,MAAM,SAASoE,GACrE,QAASA,MACNJ,GAAkBzC,KAAK,OAE6B,KAK3DR,EAAQsD,UAAY,SAASpF,GAC3B,IAAIqF,EAAavD,EAAQuD,WAAWrF,GAChCsF,EAAqC,MAArBC,EAAOvF,GAAO,GAclC,OAXAA,EAAOiE,EAAeQ,EAAOzE,EAAKe,MAAM,MAAM,SAASoE,GACrD,QAASA,MACNE,GAAY/C,KAAK,OAER+C,IACZrF,EAAO,KAELA,GAAQsF,IACVtF,GAAQ,MAGFqF,EAAa,IAAM,IAAMrF,GAInC8B,EAAQuD,WAAa,SAASrF,GAC5B,MAA0B,MAAnBA,EAAKkF,OAAO,IAIrBpD,EAAQQ,KAAO,WACb,IAAIkD,EAAQC,MAAM5C,UAAUL,MAAMO,KAAKiC,UAAW,GAClD,OAAOlD,EAAQsD,UAAUX,EAAOe,GAAO,SAASL,EAAGO,GACjD,GAAiB,kBAANP,EACT,MAAM,IAAIF,UAAU,0CAEtB,OAAOE,KACN7C,KAAK,OAMVR,EAAQ6D,SAAW,SAASC,EAAMC,GAIhC,SAASjE,EAAKkE,GAEZ,IADA,IAAIC,EAAQ,EACLA,EAAQD,EAAItE,QACE,KAAfsE,EAAIC,GADiBA,KAK3B,IADA,IAAIxE,EAAMuE,EAAItE,OAAS,EAChBD,GAAO,GACK,KAAbuE,EAAIvE,GADOA,KAIjB,OAAIwE,EAAQxE,EAAY,GACjBuE,EAAItD,MAAMuD,EAAOxE,EAAMwE,EAAQ,GAfxCH,EAAO9D,EAAQG,QAAQ2D,GAAML,OAAO,GACpCM,EAAK/D,EAAQG,QAAQ4D,GAAIN,OAAO,GAsBhC,IALA,IAAIS,EAAYpE,EAAKgE,EAAK7E,MAAM,MAC5BkF,EAAUrE,EAAKiE,EAAG9E,MAAM,MAExBS,EAAS0E,KAAKC,IAAIH,EAAUxE,OAAQyE,EAAQzE,QAC5C4E,EAAkB5E,EACb6C,EAAI,EAAGA,EAAI7C,EAAQ6C,IAC1B,GAAI2B,EAAU3B,KAAO4B,EAAQ5B,GAAI,CAC/B+B,EAAkB/B,EAClB,MAIJ,IAAIgC,EAAc,GAClB,IAAShC,EAAI+B,EAAiB/B,EAAI2B,EAAUxE,OAAQ6C,IAClDgC,EAAYxB,KAAK,MAKnB,OAFAwB,EAAcA,EAAYC,OAAOL,EAAQzD,MAAM4D,KAE5B9D,KAAK,MAG1BR,EAAQyE,IAAM,IACdzE,EAAQ0E,UAAY,IAEpB1E,EAAQ2E,QAAU,SAAUzG,GAE1B,GADoB,kBAATA,IAAmBA,GAAc,IACxB,IAAhBA,EAAKwB,OAAc,MAAO,IAK9B,IAJA,IAAIkF,EAAO1G,EAAK2G,WAAW,GACvBC,EAAmB,KAATF,EACVnF,GAAO,EACPsF,GAAe,EACVxC,EAAIrE,EAAKwB,OAAS,EAAG6C,GAAK,IAAKA,EAEtC,GAAa,MADbqC,EAAO1G,EAAK2G,WAAWtC,KAEnB,IAAKwC,EAAc,CACjBtF,EAAM8C,EACN,YAIJwC,GAAe,EAInB,OAAa,IAATtF,EAAmBqF,EAAU,IAAM,IACnCA,GAAmB,IAARrF,EAGN,IAEFvB,EAAKwC,MAAM,EAAGjB,IAiCvBO,EAAQgF,SAAW,SAAU9G,EAAM+G,GACjC,IAAIpC,EA/BN,SAAkB3E,GACI,kBAATA,IAAmBA,GAAc,IAE5C,IAGIqE,EAHA0B,EAAQ,EACRxE,GAAO,EACPsF,GAAe,EAGnB,IAAKxC,EAAIrE,EAAKwB,OAAS,EAAG6C,GAAK,IAAKA,EAClC,GAA2B,KAAvBrE,EAAK2G,WAAWtC,IAGhB,IAAKwC,EAAc,CACjBd,EAAQ1B,EAAI,EACZ,YAEgB,IAAT9C,IAGXsF,GAAe,EACftF,EAAM8C,EAAI,GAId,OAAa,IAAT9C,EAAmB,GAChBvB,EAAKwC,MAAMuD,EAAOxE,GAMjBuF,CAAS9G,GAIjB,OAHI+G,GAAOpC,EAAEY,QAAQ,EAAIwB,EAAIvF,UAAYuF,IACvCpC,EAAIA,EAAEY,OAAO,EAAGZ,EAAEnD,OAASuF,EAAIvF,SAE1BmD,GAGT7C,EAAQkF,QAAU,SAAUhH,GACN,kBAATA,IAAmBA,GAAc,IAQ5C,IAPA,IAAIiH,GAAY,EACZC,EAAY,EACZ3F,GAAO,EACPsF,GAAe,EAGfM,EAAc,EACT9C,EAAIrE,EAAKwB,OAAS,EAAG6C,GAAK,IAAKA,EAAG,CACzC,IAAIqC,EAAO1G,EAAK2G,WAAWtC,GAC3B,GAAa,KAATqC,GASS,IAATnF,IAGFsF,GAAe,EACftF,EAAM8C,EAAI,GAEC,KAATqC,GAEkB,IAAdO,EACFA,EAAW5C,EACY,IAAhB8C,IACPA,EAAc,IACK,IAAdF,IAGTE,GAAe,QArBb,IAAKN,EAAc,CACjBK,EAAY7C,EAAI,EAChB,OAuBR,OAAkB,IAAd4C,IAA4B,IAAT1F,GAEH,IAAhB4F,GAEgB,IAAhBA,GAAqBF,IAAa1F,EAAM,GAAK0F,IAAaC,EAAY,EACjE,GAEFlH,EAAKwC,MAAMyE,EAAU1F,IAa9B,IAAIgE,EAA6B,MAApB,KAAKA,QAAQ,GACpB,SAAU6B,EAAKrB,EAAOsB,GAAO,OAAOD,EAAI7B,OAAOQ,EAAOsB,IACtD,SAAUD,EAAKrB,EAAOsB,GAEpB,OADItB,EAAQ,IAAGA,EAAQqB,EAAI5F,OAASuE,GAC7BqB,EAAI7B,OAAOQ,EAAOsB,M,qCC3SjCvF,EAAQwF,WAAa,WAAc,MAAO,MAE1CxF,EAAQyF,SAAW,WACf,MAAwB,qBAAbC,SACAA,SAASD,SAER,IAGhBzF,EAAQ2F,QAAU,WAAc,MAAO,IAEvC3F,EAAQ4F,OAAS,WAAc,OAAO,GAEtC5F,EAAQ6F,QAAU,WACd,OAAOC,OAAOC,WAGlB/F,EAAQgG,SAAW,WACf,OAAOF,OAAOC,WAGlB/F,EAAQiG,KAAO,WAAc,MAAO,IAEpCjG,EAAQkG,KAAO,WAAc,MAAO,WAEpClG,EAAQmG,QAAU,WACd,MAAyB,qBAAdC,UACAA,UAAUC,WAEd,IAGXrG,EAAQsG,kBACNtG,EAAQuG,qBACR,WAAc,MAAO,IAEvBvG,EAAQwG,KAAO,WAAc,MAAO,cAEpCxG,EAAQyG,SAAW,WAAc,MAAO,WAExCzG,EAAQ0G,OAAS1G,EAAQ2G,OAAS,WAC9B,MAAO,QAGX3G,EAAQ4G,IAAM,KAEd5G,EAAQS,QAAU,WACjB,MAAO,M,iCC/CR,qEAoBAxC,EAAQ,KAAUgC,SA8HH4G,UA5HExF,IACf,MAAMyF,EAAUC,cAChB,IAAKC,EAAiBC,GAAsBC,mBAAS,IACrD,MAAOC,EAAcC,GAAmBF,oBAAS,GAC3CG,EAAYhG,EAAM/B,MAAMgI,OAAOC,IAE9BC,EAAQC,GAAaP,oBAAS,IAC9BQ,EAASC,GAAcT,oBAAS,GACvC,IAAKU,EAAYC,GAAiBX,mBAAS,IAI3CY,qBAAU,MACa,IAAjBX,IACFC,GAAgB,GAChBW,EAAgBV,OAIpB,MAAMW,EAAeC,IACnBjB,EAAgBiB,EAAMC,OAAOjG,SAASgG,EAAMC,OAAOC,QACnD,IAAIC,EAAS,IAAKpB,GAClBqB,aAAaC,QAAQ,mBAAoBC,KAAKC,UAAUJ,KAGpDL,EAAmBU,IACvB,IAAIC,EAAOL,aAAaM,QAAQ,cAC5BC,EAAQP,aAAaM,QAAQ,eACjCf,EAAWa,GAAK,CAAE7D,KAAM6D,EAAGI,SAAS,EAAMH,KAAMA,EAAME,MAAOA,GAC7D,IAAIR,EAAS,IAAKR,GAClBS,aAAaC,QAAQ,QAAS,IAC9BD,aAAaC,QAAQ,QAASC,KAAKC,UAAUJ,KAO/C,OACE,mCAuBE,eAAC,IAAD,CAAOU,UAAU,OAAjB,UACE,cAAC,IAAD,UACE,+CAEF,eAAC,IAAD,WACE,eAAC,IAAD,WACE,8BACE,oDAGF,qBAAKA,UAAU,WAAf,SACE,kCACE,uBAAO5C,KAAK,WAAW6C,SAAUf,EAAa/F,MAAM,SADtD,iBAKF,qBAAK6G,UAAU,WAAf,SACE,kCACE,uBAAO5C,KAAK,WAAW6C,SAAUf,EAAa/F,MAAM,SADtD,iBAKF,qBAAK6G,UAAU,WAAf,SACE,kCACE,uBAAO5C,KAAK,WAAW6C,SAAUf,EAAa/F,MAAM,SADtD,iBAKF,qBAAK6G,UAAU,WAAf,SACE,kCACE,uBAAO5C,KAAK,WAAW6C,SAAUf,EAAa/F,MAAM,UADtD,kBAKF,qBAAK6G,UAAU,WAAf,SACE,kCACE,uBAAO5C,KAAK,WAAW6C,SAAUf,EAAa/F,MAAM,QADtD,qBAKF,qBAAK6G,UAAU,WAAf,SACE,kCACE,uBAAO5C,KAAK,WAAW6C,SAAUf,EAAa/F,MAAM,OADtD,oBAKF,qBAAK6G,UAAU,WAAf,SACE,cAAC,IAAD,CAASE,MAAM,UAAU9C,KAAK,SAAS+C,QA3E7B,KACpBnC,EAAQ/D,KAAK,oBA0EH,8BAKJ,uBACA,eAAC,IAAD,WACE,qBAAK+F,UAAU,WAAf,SAA2BtB,EAAS,cAAC,IAAD,CAAQtF,IAAKmF,IAAgB,+BACjE,qBAAKyB,UAAU,WAAf,SAA2BpB,EAAU,cAAC,IAAD,CAASzF,MAAOoF,IAAgB","file":"static/js/26.35035961.chunk.js","sourcesContent":["/* @flow */\n/*::\n\ntype DotenvParseOptions = {\n  debug?: boolean\n}\n\n// keys and values from src\ntype DotenvParseOutput = { [string]: string }\n\ntype DotenvConfigOptions = {\n  path?: string, // path to .env file\n  encoding?: string, // encoding of .env file\n  debug?: string // turn on logging for debugging purposes\n}\n\ntype DotenvConfigOutput = {\n  parsed?: DotenvParseOutput,\n  error?: Error\n}\n\n*/\n\nconst fs = require('fs')\nconst path = require('path')\nconst os = require('os')\n\nfunction log (message /*: string */) {\n  console.log(`[dotenv][DEBUG] ${message}`)\n}\n\nconst NEWLINE = '\\n'\nconst RE_INI_KEY_VAL = /^\\s*([\\w.-]+)\\s*=\\s*(.*)?\\s*$/\nconst RE_NEWLINES = /\\\\n/g\nconst NEWLINES_MATCH = /\\r\\n|\\n|\\r/\n\n// Parses src into an Object\nfunction parse (src /*: string | Buffer */, options /*: ?DotenvParseOptions */) /*: DotenvParseOutput */ {\n  const debug = Boolean(options && options.debug)\n  const obj = {}\n\n  // convert Buffers before splitting into lines and processing\n  src.toString().split(NEWLINES_MATCH).forEach(function (line, idx) {\n    // matching \"KEY' and 'VAL' in 'KEY=VAL'\n    const keyValueArr = line.match(RE_INI_KEY_VAL)\n    // matched?\n    if (keyValueArr != null) {\n      const key = keyValueArr[1]\n      // default undefined or missing values to empty string\n      let val = (keyValueArr[2] || '')\n      const end = val.length - 1\n      const isDoubleQuoted = val[0] === '\"' && val[end] === '\"'\n      const isSingleQuoted = val[0] === \"'\" && val[end] === \"'\"\n\n      // if single or double quoted, remove quotes\n      if (isSingleQuoted || isDoubleQuoted) {\n        val = val.substring(1, end)\n\n        // if double quoted, expand newlines\n        if (isDoubleQuoted) {\n          val = val.replace(RE_NEWLINES, NEWLINE)\n        }\n      } else {\n        // remove surrounding whitespace\n        val = val.trim()\n      }\n\n      obj[key] = val\n    } else if (debug) {\n      log(`did not match key and value when parsing line ${idx + 1}: ${line}`)\n    }\n  })\n\n  return obj\n}\n\nfunction resolveHome (envPath) {\n  return envPath[0] === '~' ? path.join(os.homedir(), envPath.slice(1)) : envPath\n}\n\n// Populates process.env from .env file\nfunction config (options /*: ?DotenvConfigOptions */) /*: DotenvConfigOutput */ {\n  let dotenvPath = path.resolve(process.cwd(), '.env')\n  let encoding /*: string */ = 'utf8'\n  let debug = false\n\n  if (options) {\n    if (options.path != null) {\n      dotenvPath = resolveHome(options.path)\n    }\n    if (options.encoding != null) {\n      encoding = options.encoding\n    }\n    if (options.debug != null) {\n      debug = true\n    }\n  }\n\n  try {\n    // specifying an encoding returns a string instead of a buffer\n    const parsed = parse(fs.readFileSync(dotenvPath, { encoding }), { debug })\n\n    Object.keys(parsed).forEach(function (key) {\n      if (!Object.prototype.hasOwnProperty.call(process.env, key)) {\n        process.env[key] = parsed[key]\n      } else if (debug) {\n        log(`\"${key}\" is already defined in \\`process.env\\` and will not be overwritten`)\n      }\n    })\n\n    return { parsed }\n  } catch (e) {\n    return { error: e }\n  }\n}\n\nmodule.exports.config = config\nmodule.exports.parse = parse\n","import React from 'react'\r\nimport { QRCode } from 'react-qrcode-logo'\r\n\r\nexport default function QrCode(props) {\r\n  const defaultOptions = {\r\n    ecLevel: 'M',\r\n    enableCORS: false,\r\n    size: 150,\r\n    quietZone: 10,\r\n    bgColor: '#FFFFFF',\r\n    fgColor: '#000000',\r\n    logoImage: '',\r\n    logoWidth: 30,\r\n    logoHeight: 30,\r\n    logoOpacity: 1,\r\n    qrStyle: 'squares',\r\n  }\r\n\r\n  const options = { ...defaultOptions, ...props.options }\r\n\r\n  return <QRCode value={props.url} {...options} />\r\n}\r\n","// .dirname, .basename, and .extname methods are extracted from Node.js v8.11.1,\n// backported and transplited with Babel, with backwards-compat fixes\n\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// resolves . and .. elements in a path array with directory names there\n// must be no slashes, empty elements, or device names (c:\\) in the array\n// (so also no leading and trailing slashes - it does not distinguish\n// relative and absolute paths)\nfunction normalizeArray(parts, allowAboveRoot) {\n  // if the path tries to go above the root, `up` ends up > 0\n  var up = 0;\n  for (var i = parts.length - 1; i >= 0; i--) {\n    var last = parts[i];\n    if (last === '.') {\n      parts.splice(i, 1);\n    } else if (last === '..') {\n      parts.splice(i, 1);\n      up++;\n    } else if (up) {\n      parts.splice(i, 1);\n      up--;\n    }\n  }\n\n  // if the path is allowed to go above the root, restore leading ..s\n  if (allowAboveRoot) {\n    for (; up--; up) {\n      parts.unshift('..');\n    }\n  }\n\n  return parts;\n}\n\n// path.resolve([from ...], to)\n// posix version\nexports.resolve = function() {\n  var resolvedPath = '',\n      resolvedAbsolute = false;\n\n  for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n    var path = (i >= 0) ? arguments[i] : process.cwd();\n\n    // Skip empty and invalid entries\n    if (typeof path !== 'string') {\n      throw new TypeError('Arguments to path.resolve must be strings');\n    } else if (!path) {\n      continue;\n    }\n\n    resolvedPath = path + '/' + resolvedPath;\n    resolvedAbsolute = path.charAt(0) === '/';\n  }\n\n  // At this point the path should be resolved to a full absolute path, but\n  // handle relative paths to be safe (might happen when process.cwd() fails)\n\n  // Normalize the path\n  resolvedPath = normalizeArray(filter(resolvedPath.split('/'), function(p) {\n    return !!p;\n  }), !resolvedAbsolute).join('/');\n\n  return ((resolvedAbsolute ? '/' : '') + resolvedPath) || '.';\n};\n\n// path.normalize(path)\n// posix version\nexports.normalize = function(path) {\n  var isAbsolute = exports.isAbsolute(path),\n      trailingSlash = substr(path, -1) === '/';\n\n  // Normalize the path\n  path = normalizeArray(filter(path.split('/'), function(p) {\n    return !!p;\n  }), !isAbsolute).join('/');\n\n  if (!path && !isAbsolute) {\n    path = '.';\n  }\n  if (path && trailingSlash) {\n    path += '/';\n  }\n\n  return (isAbsolute ? '/' : '') + path;\n};\n\n// posix version\nexports.isAbsolute = function(path) {\n  return path.charAt(0) === '/';\n};\n\n// posix version\nexports.join = function() {\n  var paths = Array.prototype.slice.call(arguments, 0);\n  return exports.normalize(filter(paths, function(p, index) {\n    if (typeof p !== 'string') {\n      throw new TypeError('Arguments to path.join must be strings');\n    }\n    return p;\n  }).join('/'));\n};\n\n\n// path.relative(from, to)\n// posix version\nexports.relative = function(from, to) {\n  from = exports.resolve(from).substr(1);\n  to = exports.resolve(to).substr(1);\n\n  function trim(arr) {\n    var start = 0;\n    for (; start < arr.length; start++) {\n      if (arr[start] !== '') break;\n    }\n\n    var end = arr.length - 1;\n    for (; end >= 0; end--) {\n      if (arr[end] !== '') break;\n    }\n\n    if (start > end) return [];\n    return arr.slice(start, end - start + 1);\n  }\n\n  var fromParts = trim(from.split('/'));\n  var toParts = trim(to.split('/'));\n\n  var length = Math.min(fromParts.length, toParts.length);\n  var samePartsLength = length;\n  for (var i = 0; i < length; i++) {\n    if (fromParts[i] !== toParts[i]) {\n      samePartsLength = i;\n      break;\n    }\n  }\n\n  var outputParts = [];\n  for (var i = samePartsLength; i < fromParts.length; i++) {\n    outputParts.push('..');\n  }\n\n  outputParts = outputParts.concat(toParts.slice(samePartsLength));\n\n  return outputParts.join('/');\n};\n\nexports.sep = '/';\nexports.delimiter = ':';\n\nexports.dirname = function (path) {\n  if (typeof path !== 'string') path = path + '';\n  if (path.length === 0) return '.';\n  var code = path.charCodeAt(0);\n  var hasRoot = code === 47 /*/*/;\n  var end = -1;\n  var matchedSlash = true;\n  for (var i = path.length - 1; i >= 1; --i) {\n    code = path.charCodeAt(i);\n    if (code === 47 /*/*/) {\n        if (!matchedSlash) {\n          end = i;\n          break;\n        }\n      } else {\n      // We saw the first non-path separator\n      matchedSlash = false;\n    }\n  }\n\n  if (end === -1) return hasRoot ? '/' : '.';\n  if (hasRoot && end === 1) {\n    // return '//';\n    // Backwards-compat fix:\n    return '/';\n  }\n  return path.slice(0, end);\n};\n\nfunction basename(path) {\n  if (typeof path !== 'string') path = path + '';\n\n  var start = 0;\n  var end = -1;\n  var matchedSlash = true;\n  var i;\n\n  for (i = path.length - 1; i >= 0; --i) {\n    if (path.charCodeAt(i) === 47 /*/*/) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string, stop now\n        if (!matchedSlash) {\n          start = i + 1;\n          break;\n        }\n      } else if (end === -1) {\n      // We saw the first non-path separator, mark this as the end of our\n      // path component\n      matchedSlash = false;\n      end = i + 1;\n    }\n  }\n\n  if (end === -1) return '';\n  return path.slice(start, end);\n}\n\n// Uses a mixed approach for backwards-compatibility, as ext behavior changed\n// in new Node.js versions, so only basename() above is backported here\nexports.basename = function (path, ext) {\n  var f = basename(path);\n  if (ext && f.substr(-1 * ext.length) === ext) {\n    f = f.substr(0, f.length - ext.length);\n  }\n  return f;\n};\n\nexports.extname = function (path) {\n  if (typeof path !== 'string') path = path + '';\n  var startDot = -1;\n  var startPart = 0;\n  var end = -1;\n  var matchedSlash = true;\n  // Track the state of characters (if any) we see before our first dot and\n  // after any path separator we find\n  var preDotState = 0;\n  for (var i = path.length - 1; i >= 0; --i) {\n    var code = path.charCodeAt(i);\n    if (code === 47 /*/*/) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string, stop now\n        if (!matchedSlash) {\n          startPart = i + 1;\n          break;\n        }\n        continue;\n      }\n    if (end === -1) {\n      // We saw the first non-path separator, mark this as the end of our\n      // extension\n      matchedSlash = false;\n      end = i + 1;\n    }\n    if (code === 46 /*.*/) {\n        // If this is our first dot, mark it as the start of our extension\n        if (startDot === -1)\n          startDot = i;\n        else if (preDotState !== 1)\n          preDotState = 1;\n    } else if (startDot !== -1) {\n      // We saw a non-dot and non-path separator before our dot, so we should\n      // have a good chance at having a non-empty extension\n      preDotState = -1;\n    }\n  }\n\n  if (startDot === -1 || end === -1 ||\n      // We saw a non-dot character immediately before the dot\n      preDotState === 0 ||\n      // The (right-most) trimmed path component is exactly '..'\n      preDotState === 1 && startDot === end - 1 && startDot === startPart + 1) {\n    return '';\n  }\n  return path.slice(startDot, end);\n};\n\nfunction filter (xs, f) {\n    if (xs.filter) return xs.filter(f);\n    var res = [];\n    for (var i = 0; i < xs.length; i++) {\n        if (f(xs[i], i, xs)) res.push(xs[i]);\n    }\n    return res;\n}\n\n// String.prototype.substr - negative index don't work in IE8\nvar substr = 'ab'.substr(-1) === 'b'\n    ? function (str, start, len) { return str.substr(start, len) }\n    : function (str, start, len) {\n        if (start < 0) start = str.length + start;\n        return str.substr(start, len);\n    }\n;\n","exports.endianness = function () { return 'LE' };\n\nexports.hostname = function () {\n    if (typeof location !== 'undefined') {\n        return location.hostname\n    }\n    else return '';\n};\n\nexports.loadavg = function () { return [] };\n\nexports.uptime = function () { return 0 };\n\nexports.freemem = function () {\n    return Number.MAX_VALUE;\n};\n\nexports.totalmem = function () {\n    return Number.MAX_VALUE;\n};\n\nexports.cpus = function () { return [] };\n\nexports.type = function () { return 'Browser' };\n\nexports.release = function () {\n    if (typeof navigator !== 'undefined') {\n        return navigator.appVersion;\n    }\n    return '';\n};\n\nexports.networkInterfaces\n= exports.getNetworkInterfaces\n= function () { return {} };\n\nexports.arch = function () { return 'javascript' };\n\nexports.platform = function () { return 'browser' };\n\nexports.tmpdir = exports.tmpDir = function () {\n    return '/tmp';\n};\n\nexports.EOL = '\\n';\n\nexports.homedir = function () {\n\treturn '/'\n};\n","import React, { useEffect, useState } from 'react'\r\n\r\nimport QrCode from './QRCode'\r\nimport Barcode from 'react-barcode'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nimport {\r\n  CButton,\r\n  CCard,\r\n  CCardBody,\r\n  CCardHeader,\r\n  CCol,\r\n  CForm,\r\n  CFormInput,\r\n  CFormLabel,\r\n  CFormSelect,\r\n  CFormFeedback,\r\n  CRow,\r\n} from '@coreui/react'\r\n\r\nrequire('dotenv').config()\r\n\r\nconst printPR = (props) => {\r\n  const history = useHistory()\r\n  let [printingOptions, setPrintingOptions] = useState([])\r\n  const [resultLoaded, setResultLoaded] = useState(false)\r\n  const productId = props.match.params.id\r\n\r\n  const [qrCode, setQRCode] = useState(true)\r\n  const [barCode, setBarCode] = useState(true)\r\n  let [arrChecked, setArrChecked] = useState([])\r\n\r\n  let numofImages = 4\r\n\r\n  useEffect(() => {\r\n    if (resultLoaded === false) {\r\n      setResultLoaded(true)\r\n      singlePrintPage(productId)\r\n    }\r\n  })\r\n\r\n  const setPrinting = (event) => {\r\n    printingOptions[event.target.value] = event.target.checked ? true : false\r\n    let newArr = { ...printingOptions }\r\n    localStorage.setItem('printing_options', JSON.stringify(newArr))\r\n  }\r\n\r\n  const singlePrintPage = (k) => {\r\n    let name = localStorage.getItem('print_name')\r\n    let price = localStorage.getItem('print_price')\r\n    arrChecked[k] = { code: k, doPrint: true, name: name, price: price }\r\n    let newArr = { ...arrChecked }\r\n    localStorage.setItem('print', '')\r\n    localStorage.setItem('print', JSON.stringify(newArr))\r\n  }\r\n\r\n  const gotoPrintPage = () => {\r\n    history.push('/products/print')\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {/* <table className=\"table prlist\">\r\n        <thead>\r\n          <tr>\r\n            <td>\r\n              <label>\r\n                <input type=\"checkbox\" onChange={(e) => setQRCode(!qrCode)} defaultChecked /> Print\r\n                QR Code\r\n              </label>\r\n            </td>\r\n            <td>\r\n              <label>\r\n                <input type=\"checkbox\" onChange={(e) => setBarCode(!barCode)} defaultChecked />{' '}\r\n                Print Bar Code\r\n              </label>\r\n            </td>\r\n             \r\n          <tr>\r\n            <td colSpan=\"2\">{qrCode ? <QrCode url={productId} /> : <></>}</td>\r\n            <td colSpan=\"2\">{barCode ? <Barcode value={productId} /> : <></>}</td>\r\n          </tr>\r\n        </thead>\r\n      </table> */}\r\n      <CCard className=\"mb-4\">\r\n        <CCardHeader>\r\n          <strong>Actions</strong>\r\n        </CCardHeader>\r\n        <CCardBody>\r\n          <CRow>\r\n            <div>\r\n              <h6>Printing Options</h6>\r\n            </div>\r\n\r\n            <div className=\"col-sm-1\">\r\n              <label>\r\n                <input type=\"checkbox\" onChange={setPrinting} value=\"logo\" />\r\n                &nbsp; Logo\r\n              </label>\r\n            </div>\r\n            <div className=\"col-sm-1\">\r\n              <label>\r\n                <input type=\"checkbox\" onChange={setPrinting} value=\"name\" />\r\n                &nbsp; Name\r\n              </label>\r\n            </div>\r\n            <div className=\"col-sm-1\">\r\n              <label>\r\n                <input type=\"checkbox\" onChange={setPrinting} value=\"code\" />\r\n                &nbsp; Code\r\n              </label>\r\n            </div>\r\n            <div className=\"col-sm-1\">\r\n              <label>\r\n                <input type=\"checkbox\" onChange={setPrinting} value=\"price\" />\r\n                &nbsp; Price\r\n              </label>\r\n            </div>\r\n            <div className=\"col-sm-1\">\r\n              <label>\r\n                <input type=\"checkbox\" onChange={setPrinting} value=\"bar\" />\r\n                &nbsp; Bar Code\r\n              </label>\r\n            </div>\r\n            <div className=\"col-sm-1\">\r\n              <label>\r\n                <input type=\"checkbox\" onChange={setPrinting} value=\"qr\" />\r\n                &nbsp; QR Code\r\n              </label>\r\n            </div>\r\n            <div className=\"col-sm-1\">\r\n              <CButton color=\"primary\" type=\"button\" onClick={gotoPrintPage}>\r\n                Print Codes\r\n              </CButton>\r\n            </div>\r\n          </CRow>\r\n          <hr />\r\n          <CRow>\r\n            <div className=\"col-sm-2\">{qrCode ? <QrCode url={productId} /> : <></>}</div>\r\n            <div className=\"col-sm-2\">{barCode ? <Barcode value={productId} /> : <></>}</div>\r\n          </CRow>\r\n        </CCardBody>\r\n      </CCard>\r\n    </>\r\n  )\r\n}\r\nexport default printPR\r\n"],"sourceRoot":""}