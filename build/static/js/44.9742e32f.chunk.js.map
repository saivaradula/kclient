{"version":3,"sources":["components/product/print.js"],"names":["Print","props","useHistory","isPCodePicked","setIsCodePicked","useState","prints","setPrints","useEffect","xs","className","Object","entries","JSON","parse","localStorage","getItem","map","key","value","k","doPrint","required","autoComplete","type","onChange","event","newPrint","num","target","setItem","stringify","placeholder","color","onClick","window","open"],"mappings":"6KAAA,0CAgGeA,UAnFAC,IACGC,cAAhB,MAEOC,EAAeC,GAAmBC,oBAAS,GAClD,IAAKC,EAAQC,GAAaF,mBAAS,IAOnCG,qBAAU,KACHL,GACHC,GAAgB,MAcpB,OACE,mCACGD,EACC,mCACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAMM,GAAI,GAAV,SACE,eAAC,IAAD,CAAOC,UAAU,OAAjB,UACE,cAAC,IAAD,UACE,+DAEF,eAAC,IAAD,WACGC,OAAOC,QAAQC,KAAKC,MAAMC,aAAaC,QAAQ,WAAWC,KAAI,IAAmB,IAAjBC,EAAKC,GAAW,EAjB3EC,MAuCJ,OArBQD,EAAME,QACZ,eAAC,IAAD,CAAgBX,UAAU,OAA1B,UACE,qBAAKA,UAAU,WAAf,SAA2B,IAC3B,qBAAKA,UAAU,WAAf,SACE,cAAC,IAAD,CAAYA,UAAU,iBAAtB,SACE,iCAASQ,QAGb,qBAAKR,UAAU,WAAf,SACE,cAAC,IAAD,CACEY,UAAQ,EACRC,aAAa,MACbC,KAAK,OACLC,UA/BJL,EA+B2BF,EA/BpBQ,IAC3B,IAAIC,EAAWd,KAAKC,MAAMC,aAAaC,QAAQ,UAC/CW,EAASP,GAAGQ,IAAMF,EAAMG,OAAOV,MAC/BJ,aAAae,QAAQ,QAASjB,KAAKkB,UAAUJ,MA6BrBK,YAAY,4BAbPd,GAkBX,gCAIJ,cAAC,IAAD,CAAMR,UAAU,OAAhB,SACE,cAAC,IAAD,CAAMD,GAAI,GAAIC,UAAU,aAAxB,SACE,qBAAKA,UAAU,WAAf,SACE,cAAC,IAAD,CAASuB,MAAM,UAAUT,KAAK,SAASU,QAhDxC,KACnBC,OAAOC,KAAK,2BAA4B,WA+CpB,2CAYhB","file":"static/js/44.9742e32f.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport {\r\n  CButton,\r\n  CCard,\r\n  CCardBody,\r\n  CCardHeader,\r\n  CCol,\r\n  CFormInput,\r\n  CFormLabel,\r\n  CRow,\r\n} from '@coreui/react'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nconst Print = (props) => {\r\n  const history = useHistory()\r\n\r\n  const [isPCodePicked, setIsCodePicked] = useState(false)\r\n  let [prints, setPrints] = useState([])\r\n\r\n  const toggle = () => {\r\n    setModal(!modal)\r\n    alert(modal)\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (!isPCodePicked) {\r\n      setIsCodePicked(true)\r\n    }\r\n  })\r\n\r\n  const printPreview = () => {\r\n    window.open('#/products/print/preview', '_blank')\r\n  }\r\n\r\n  const getThisPrint = (k) => (event) => {\r\n    let newPrint = JSON.parse(localStorage.getItem('print'))\r\n    newPrint[k].num = event.target.value\r\n    localStorage.setItem('print', JSON.stringify(newPrint))\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {isPCodePicked ? (\r\n        <>\r\n          <CRow>\r\n            <CCol xs={12}>\r\n              <CCard className=\"mb-4\">\r\n                <CCardHeader>\r\n                  <strong>Printing Products Codes</strong>\r\n                </CCardHeader>\r\n                <CCardBody>\r\n                  {Object.entries(JSON.parse(localStorage.getItem('print'))).map(([key, value]) => {\r\n                    let d = value.doPrint ? (\r\n                      <CRow key={key} className=\"mb-4\">\r\n                        <div className=\"col-sm-1\">{1}</div>\r\n                        <div className=\"col-sm-1\">\r\n                          <CFormLabel className=\"col-form-label\">\r\n                            <strong>{key}</strong>\r\n                          </CFormLabel>\r\n                        </div>\r\n                        <div className=\"col-sm-3\">\r\n                          <CFormInput\r\n                            required\r\n                            autoComplete=\"off\"\r\n                            type=\"text\"\r\n                            onChange={getThisPrint(key)}\r\n                            placeholder=\"Enter Print numbers\"\r\n                          />\r\n                        </div>\r\n                      </CRow>\r\n                    ) : (\r\n                      <></>\r\n                    )\r\n                    return d\r\n                  })}\r\n                  <CRow className=\"mb-4\">\r\n                    <CCol xs={12} className=\"text-right\">\r\n                      <div className=\"col-sm-1\">\r\n                        <CButton color=\"primary\" type=\"button\" onClick={printPreview}>\r\n                          Print Codes\r\n                        </CButton>\r\n                      </div>\r\n                    </CCol>\r\n                  </CRow>\r\n                </CCardBody>\r\n              </CCard>\r\n            </CCol>\r\n          </CRow>\r\n        </>\r\n      ) : (\r\n        <></>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Print\r\n"],"sourceRoot":""}