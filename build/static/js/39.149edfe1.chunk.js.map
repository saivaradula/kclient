{"version":3,"sources":["components/product/QRCode.js","components/product/editProduct.js"],"names":["QrCode","props","options","ecLevel","enableCORS","size","quietZone","bgColor","fgColor","logoImage","logoWidth","logoHeight","logoOpacity","qrStyle","value","url","require","config","EditProduct","history","useHistory","validated","setValidated","useState","state","setState","id","code","name","sname","brand","category","subcategory","cost","price","quantity","alertnum","model","prtype","unit","prodimage","godawan","showOriginalImage","categoryList","setCategoryList","resultLoaded","setResultLoaded","useEffect","axios","get","process","match","params","then","response","p","data","prevState","nickname","alert","image","secretCode","getFirstLetter","words","join","toUpperCase","className","noValidate","onSubmit","event","preventDefault","currentTarget","checkValidity","stopPropagation","post","status","push","xs","htmlFor","length","required","onChange","e","target","map","c","invalid","type","autocomplete","onBlur","categoryFL","fLetters","substring","res","setSubC","placeholder","maxlength","i","parseInt","parseFloat","toFixed","updateFinalPrice","disabled","style","float","src","width","height","img","Image","canvas","document","getElementById","ctx","getContext","onload","iw","ih","scale","Math","min","iwScaled","ihScaled","drawImage","imageCode","toDataURL","URL","createObjectURL","files","color"],"mappings":"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","file":"static/js/39.149edfe1.chunk.js","sourcesContent":["import React from 'react'\r\nimport { QRCode } from 'react-qrcode-logo'\r\n\r\nexport default function QrCode(props) {\r\n  const defaultOptions = {\r\n    ecLevel: 'M',\r\n    enableCORS: false,\r\n    size: 150,\r\n    quietZone: 10,\r\n    bgColor: '#FFFFFF',\r\n    fgColor: '#000000',\r\n    logoImage: '',\r\n    logoWidth: 30,\r\n    logoHeight: 30,\r\n    logoOpacity: 1,\r\n    qrStyle: 'squares',\r\n  }\r\n\r\n  const options = { ...defaultOptions, ...props.options }\r\n\r\n  return <QRCode value={props.url} {...options} />\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nimport axios from 'axios'\r\nrequire('dotenv').config()\r\n\r\nimport QrCode from './QRCode'\r\nimport Barcode from 'react-barcode'\r\n\r\nimport {\r\n    CButton,\r\n    CCard,\r\n    CCardBody,\r\n    CCardHeader,\r\n    CCol,\r\n    CForm,\r\n    CFormInput,\r\n    CFormLabel,\r\n    CFormSelect,\r\n    CFormFeedback,\r\n    CRow,\r\n} from '@coreui/react'\r\n\r\nconst EditProduct = (props) => {\r\n\r\n    const history = useHistory()\r\n    const [validated, setValidated] = useState(false)\r\n    const [state, setState] = useState({\r\n        id: '',\r\n        code: '',\r\n        name: '',\r\n        sname: '',\r\n        brand: '',\r\n        category: '',\r\n        subcategory: '',\r\n        cost: '',\r\n        price: '',\r\n        quantity: '',\r\n        alertnum: '',\r\n        model: '',\r\n        prtype: '',\r\n        unit: '',\r\n        prodimage: '',\r\n        godawan: '',\r\n        showOriginalImage: true\r\n    })\r\n\r\n    const [categoryList, setCategoryList] = useState([])\r\n    const [resultLoaded, setResultLoaded] = useState(false)\r\n\r\n    const printGodawns = [\r\n        1, 2, 3, 4, 5, 6, 7, 8, 9, 10\r\n    ]\r\n\r\n    const getCategories = () => {\r\n        axios.get(`${process.env.REACT_APP_API_URL}/category`).then((data) => {\r\n            setCategoryList(data.data)\r\n            setResultLoaded(true)\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        // console.log(props.match.params.id)\r\n        if (resultLoaded === false) {\r\n            // get product details\r\n            axios.get(`${process.env.REACT_APP_API_URL}/products/details/${props.match.params.id}`).then((response) => {\r\n\r\n                let p = response.data[0]\r\n                setState(prevState => ({\r\n                    ...prevState,\r\n                    id: p.id,\r\n                    code: p.code,\r\n                    name: p.name,\r\n                    sname: p.nickname,\r\n                    brand: p.brand,\r\n                    category: p.category,\r\n                    subcategory: p.subcategory,\r\n                    cost: p.cost,\r\n                    price: p.price,\r\n                    quantity: p.quantity,\r\n                    alertnum: p.alert,\r\n                    model: p.model,\r\n                    prtype: p.prtype,\r\n                    unit: p.unit,\r\n                    godawan: p.godawan,\r\n                    prodimage: p.image,\r\n                    secretCode: p.code\r\n                }));\r\n                getCategories()\r\n            })\r\n\r\n        }\r\n    })\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault()\r\n        const form = event.currentTarget\r\n        if (form.checkValidity() === false) {\r\n            event.preventDefault()\r\n            event.stopPropagation()\r\n        }\r\n        setValidated(true)\r\n\r\n        axios.post(`${process.env.REACT_APP_API_URL}/products/update`, state).then((response) => {\r\n            if (response.status === 200) {\r\n                history.push(`/products/list/${props.match.params.p}`)\r\n            }\r\n        })\r\n    }\r\n\r\n    const arrayBufferToBase64 = (buffer) => {\r\n        let binary = '';\r\n        let bytes = [].slice.call(new Uint8Array(buffer));\r\n        bytes.forEach((b) => binary += String.fromCharCode(b));\r\n        return window.btoa(binary);\r\n    };\r\n\r\n    const create_src = (type, buffer) => {\r\n        let base64Flag = 'data:image/' + type + ';base64,';\r\n        let base64string = arrayBufferToBase64(buffer);\r\n        let result = base64Flag + base64string;\r\n        return result;\r\n    }\r\n\r\n    const baseImage = (e) => {\r\n        let img = new Image;\r\n        let canvas = document.getElementById(\"canvas\");\r\n        let ctx = canvas.getContext(\"2d\");\r\n        let maxW = 512;\r\n        let maxH = 512;\r\n        img.onload = () => {\r\n            let iw = img.width;\r\n            let ih = img.height;\r\n            let scale = Math.min((maxW / iw), (maxH / ih));\r\n            let iwScaled = iw * scale;\r\n            let ihScaled = ih * scale;\r\n            canvas.width = iwScaled;\r\n            canvas.height = ihScaled;\r\n            ctx.drawImage(img, 0, 0, iwScaled, ihScaled);\r\n            let imageCode = canvas.toDataURL(\"image/jpeg\", 0.5);\r\n            setState(prevState => ({\r\n                ...prevState,\r\n                prodimage: imageCode,\r\n                showOriginalImage: false\r\n            }))\r\n        }\r\n        img.src = URL.createObjectURL(e.target.files[0]);\r\n    }\r\n\r\n    const listOptions = () => {\r\n        return categoryList.map((c) => <option value={c.name}>{c.name}</option>)\r\n    }\r\n\r\n    const updateFinalPrice = (e) => {\r\n        let c = parseInt(e.target.value);\r\n        let p = parseFloat(c + (c * 0.1)).toFixed(2)\r\n\r\n        setState(prevState => ({\r\n            ...prevState,\r\n            cost: c, price: p\r\n        }));\r\n    }\r\n\r\n    const getFirstLetter = (words) => {\r\n        let matches = words.match(/\\b(\\w)/g);\r\n        return matches.join('').toUpperCase();\r\n    }\r\n\r\n    const setSubC = (e) => {\r\n        if (e.target.value !== '') {\r\n            let categoryFL = getFirstLetter(state.category)\r\n            let fLetters = getFirstLetter(e.target.value);\r\n            fLetters = categoryFL + fLetters;\r\n            const first3 = state.secretCode.substring(0, 3);\r\n\r\n            if (first3 !== fLetters) {\r\n                axios.get(`${process.env.REACT_APP_API_URL}/products/getNextCode/${fLetters}`).then((res) => {\r\n                    setState(prevState => ({\r\n                        ...prevState,\r\n                        code: res.data\r\n                    }))\r\n                })\r\n            }\r\n        } else {\r\n            setState(prevState => ({\r\n                ...prevState,\r\n                code: state.secretCode\r\n            }))\r\n        }\r\n    }\r\n\r\n    return setResultLoaded ? (\r\n        <CForm\r\n            className=\"row g-3 needs-validation\"\r\n            noValidate\r\n            validated={validated}\r\n            onSubmit={handleSubmit}\r\n        >\r\n            <CRow>\r\n                <CCol xs={12}>\r\n                    <CCard className=\"mb-4\">\r\n                        <CCardHeader>\r\n                            <strong>Add Products to Store</strong>\r\n                        </CCardHeader>\r\n                        <CCardBody>\r\n                            <CRow className=\"mb-4\">\r\n                                <div className=\"col-sm-1\">\r\n                                    <CFormLabel htmlFor=\"category\" className=\"col-form-label\">\r\n                                        Category\r\n                                    </CFormLabel>\r\n                                </div>\r\n                                <div className=\"col-sm-3\">\r\n                                    {categoryList.length ? (\r\n                                        <CFormSelect\r\n                                            value={state.category}\r\n                                            required\r\n                                            id=\"category\"\r\n                                            onChange={(e) =>\r\n                                                setState(prevState => ({\r\n                                                    ...prevState,\r\n                                                    category: e.target.value,\r\n                                                    subcategory: ''\r\n                                                }))\r\n                                            }\r\n                                        >\r\n                                            <option value=\"\">Choose Category</option>\r\n                                            {listOptions()}\r\n                                        </CFormSelect>\r\n                                    ) : (\r\n                                        <></>\r\n                                    )}\r\n                                    <CFormFeedback invalid>Please Select category.</CFormFeedback>\r\n                                </div>\r\n                                <div className=\"col-sm-1\">\r\n                                    <CFormLabel htmlFor=\"subcategory\" className=\"col-form-label\">\r\n                                        Sub-Category\r\n                                    </CFormLabel>\r\n                                </div>\r\n                                <div className=\"col-sm-3\">\r\n                                    <CFormInput\r\n                                        type=\"text\"\r\n                                        value={state.subcategory}\r\n                                        autocomplete=\"off\"\r\n                                        id=\"subcategory\"\r\n                                        onChange={(e) =>\r\n                                            setState(prevState => ({\r\n                                                ...prevState,\r\n                                                subcategory: e.target.value\r\n                                            }))\r\n                                        }\r\n                                        onBlur={(e) => setSubC(e)}\r\n                                        placeholder=\"Enter Sub Category\"\r\n                                    />\r\n                                </div>\r\n                                <div className=\"col-sm-1\">\r\n                                    <CFormLabel htmlFor=\"productCode\" className=\"col-form-label\">\r\n                                        code\r\n                                    </CFormLabel>\r\n                                </div>\r\n                                <div className=\"col-sm-3\">\r\n                                    <CFormInput\r\n                                        required\r\n                                        value={state.code}\r\n                                        autocomplete=\"off\"\r\n                                        type=\"text\"\r\n                                        id=\"productCode\"\r\n                                        onChange={(e) => {\r\n                                            setState(prevState => ({\r\n                                                ...prevState,\r\n                                                code: e.target.value\r\n                                            }))\r\n                                        }}\r\n                                        placeholder=\"Enter Product Code(Ex: PR-12345)\"\r\n                                    />\r\n                                    <CFormFeedback invalid>Please provide product code.</CFormFeedback>\r\n                                </div>\r\n                            </CRow>\r\n                            <CRow className=\"mt-2 mb-4\">\r\n                                <div className=\"col-sm-1\">\r\n                                    <CFormLabel htmlFor=\"productName\" className=\"col-form-label\">\r\n                                        Name\r\n                                    </CFormLabel>\r\n                                </div>\r\n                                <div className=\"col-sm-3\">\r\n                                    <CFormInput\r\n                                        required\r\n                                        value={state.name}\r\n                                        autocomplete=\"off\"\r\n                                        type=\"text\"\r\n                                        id=\"productName\"\r\n                                        onChange={(e) => {\r\n                                            setState(prevState => ({\r\n                                                ...prevState,\r\n                                                name: e.target.value\r\n                                            }))\r\n                                        }}\r\n\r\n                                        placeholder=\"Enter Product Name\"\r\n                                    />\r\n                                    <CFormFeedback invalid>Please enter product name.</CFormFeedback>\r\n                                </div>\r\n                                <div className=\"col-sm-1\">\r\n                                    <CFormLabel htmlFor=\"productName\" className=\"col-form-label\">\r\n                                        NickName\r\n                                    </CFormLabel>\r\n                                </div>\r\n                                <div className=\"col-sm-3\">\r\n                                    <CFormInput\r\n                                        required\r\n                                        value={state.sname}\r\n                                        autocomplete=\"off\"\r\n                                        type=\"text\"\r\n                                        maxlength=\"25\"\r\n                                        id=\"productNickName\"\r\n                                        onChange={(e) => {\r\n                                            setState(prevState => ({\r\n                                                ...prevState,\r\n                                                sname: e.target.value\r\n                                            }))\r\n                                        }}\r\n                                        placeholder=\"Enter Product Nick(Short) Name\"\r\n                                    />\r\n                                    <CFormFeedback invalid>Please enter nick product name.</CFormFeedback>\r\n                                </div>\r\n                                <div className=\"col-sm-1\">\r\n                                    <CFormLabel htmlFor=\"prtype\" className=\"col-form-label\">\r\n                                        Pr.Type\r\n                                    </CFormLabel>\r\n                                </div>\r\n                                <div className=\"col-sm-3\">\r\n                                    <CFormSelect required id=\"prtype\"\r\n                                        value={state.prtype}\r\n                                        onChange={(e) => {\r\n                                            setState(prevState => ({\r\n                                                ...prevState,\r\n                                                prtype: e.target.value\r\n                                            }))\r\n                                        }}\r\n                                    >\r\n                                        <option value=\"\">Choose...</option>\r\n                                        <option value=\"new\">New</option>\r\n                                        <option value=\"used\">Used</option>\r\n                                        <option value=\"antique\">Antique</option>\r\n                                        <option value=\"damage\">Damage</option>\r\n                                    </CFormSelect>\r\n                                    <CFormFeedback invalid>Please select product type.</CFormFeedback>\r\n                                </div>\r\n                            </CRow>\r\n                            <CRow className=\"mt-2 mb-4\">\r\n                                <div className=\"col-sm-1\">\r\n                                    <CFormLabel htmlFor=\"model\" className=\"col-form-label\">\r\n                                        Brand\r\n                                    </CFormLabel>\r\n                                </div>\r\n                                <div className=\"col-sm-3\">\r\n                                    <CFormInput\r\n                                        required\r\n                                        value={state.model}\r\n                                        autocomplete=\"off\"\r\n                                        type=\"text\"\r\n                                        id=\"model\"\r\n                                        onChange={(e) => {\r\n                                            setState(prevState => ({\r\n                                                ...prevState,\r\n                                                model: e.target.value\r\n                                            }))\r\n                                        }}\r\n                                        placeholder=\"Enter Brand\"\r\n                                    />\r\n                                    <CFormFeedback invalid>Please enter model.</CFormFeedback>\r\n                                </div>\r\n                                <div className=\"col-sm-1\">\r\n                                    <CFormLabel htmlFor=\"brandName\" className=\"col-form-label\">\r\n                                        Size\r\n                                    </CFormLabel>\r\n                                </div>\r\n                                <div className=\"col-sm-3\">\r\n                                    <CFormInput\r\n                                        type=\"text\"\r\n                                        value={state.brand}\r\n                                        autocomplete=\"off\"\r\n                                        id=\"brandName\"\r\n                                        onChange={(e) => {\r\n                                            setState(prevState => ({\r\n                                                ...prevState,\r\n                                                brand: e.target.value\r\n                                            }))\r\n                                        }}\r\n                                        placeholder=\"Enter Size\"\r\n                                    />\r\n                                    <CFormFeedback invalid>Please enter Brand.</CFormFeedback>\r\n                                </div>\r\n                                <div className=\"col-sm-1\">\r\n                                    <CFormLabel htmlFor=\"unitchange\" className=\"col-form-label\">\r\n                                        Unit\r\n                                    </CFormLabel>\r\n                                </div>\r\n                                <div className=\"col-sm-3\">\r\n                                    <CFormInput\r\n                                        type=\"text\"\r\n                                        value={state.unit}\r\n                                        autocomplete=\"off\"\r\n                                        id=\"unitchange\"\r\n                                        onChange={(e) => {\r\n                                            setState(prevState => ({\r\n                                                ...prevState,\r\n                                                unit: e.target.value\r\n                                            }))\r\n                                        }}\r\n                                        placeholder=\"Unit. Eg: Kgs/Dozens\"\r\n                                    />\r\n                                </div>\r\n                            </CRow>\r\n                            <hr />\r\n                            <CRow className=\"mb-4\">\r\n                                <div className=\"col\">\r\n                                    <CFormSelect\r\n                                        value={state.godawan}\r\n                                        id=\"godown\"\r\n                                        onChange={(e) =>\r\n                                            setState(prevState => ({\r\n                                                ...prevState,\r\n                                                godawan: e.target.value\r\n                                            }))\r\n                                        }\r\n                                    >\r\n                                        {printGodawns.map(i => <option value={i}>Godown - {i}</option>)}\r\n                                    </CFormSelect>\r\n                                </div>\r\n                                <div className=\"col\">\r\n                                    <CFormInput\r\n                                        type=\"number\"\r\n                                        value={state.cost}\r\n                                        autocomplete=\"off\"\r\n                                        id=\"cost\"\r\n                                        required\r\n                                        onChange={(e) => updateFinalPrice(e)}\r\n                                        placeholder=\"Purchased Price\"\r\n                                    />\r\n                                </div>\r\n                                <div className=\"col\">\r\n                                    <CFormInput\r\n                                        type=\"number\"\r\n                                        autocomplete=\"off\"\r\n                                        id=\"price\"\r\n                                        required\r\n                                        value={state.price}\r\n                                        disabled\r\n                                        placeholder=\"Final Price \"\r\n                                    />\r\n                                </div>\r\n                                <div className=\"col\">\r\n                                    <CFormInput\r\n                                        type=\"number\"\r\n                                        autocomplete=\"off\"\r\n                                        required\r\n                                        value={state.quantity}\r\n                                        id=\"quantity\"\r\n                                        onChange={(e) => {\r\n                                            setState(prevState => ({\r\n                                                ...prevState,\r\n                                                quantity: e.target.value\r\n                                            }))\r\n                                        }}\r\n\r\n                                        placeholder=\"Enter Quantity\"\r\n                                    />\r\n                                </div>\r\n                                <div className=\"col\">\r\n                                    <CFormInput\r\n                                        type=\"number\"\r\n                                        autocomplete=\"off\"\r\n                                        required\r\n                                        id=\"alert\"\r\n                                        value={state.alertnum}\r\n                                        onChange={(e) => {\r\n                                            setState(prevState => ({\r\n                                                ...prevState,\r\n                                                alertnum: e.target.value\r\n                                            }))\r\n                                        }}\r\n                                        placeholder=\"Enter Alerting Quantity\"\r\n                                    />\r\n                                </div>\r\n                            </CRow>\r\n                        </CCardBody>\r\n                    </CCard>\r\n                </CCol>\r\n            </CRow>\r\n            <CRow>\r\n                <CCol xs={12}>\r\n                    <CCard className=\"\">\r\n                        <CCardHeader>\r\n                            <strong>Product Image and QR/Bar Codes</strong>\r\n                        </CCardHeader>\r\n                        <CCardBody>\r\n                            <div className=\"col-sm-4 mr-2\" style={{ float: 'left' }}>\r\n                                <CCard className=\"\">\r\n                                    <CCardHeader>\r\n                                        <strong>Product Image</strong>\r\n                                    </CCardHeader>\r\n                                    <CCardBody>\r\n                                        <div className=\"\">\r\n                                            <div className=\"text-center\">\r\n                                                {\r\n                                                    (state.showOriginalImage) ?\r\n                                                        <><img src={state.prodimage} /></>\r\n                                                        : <></>\r\n                                                }\r\n                                                <canvas id=\"canvas\"\r\n                                                    width=\"64\" height=\"64\"></canvas>\r\n                                            </div>\r\n                                            <div>\r\n                                                <input\r\n                                                    type=\"file\"\r\n                                                    id=\"input\"\r\n                                                    onChange={baseImage}\r\n                                                    className=\"mb-4 mt-4 form-control\"\r\n                                                />\r\n                                            </div>\r\n                                        </div>\r\n                                    </CCardBody>\r\n                                </CCard>\r\n                            </div>\r\n                            <div className=\"col-sm-4\" style={{ float: 'left' }}>\r\n                                <CCard className=\"\">\r\n                                    <CCardHeader>\r\n                                        <strong>Product QR Code</strong>\r\n                                    </CCardHeader>\r\n                                    <CCardBody>\r\n                                        <div className=\"text-center\">\r\n                                            {state.code !== '' ? (\r\n                                                <QrCode url={state.code} />\r\n                                            ) : (\r\n                                                <div>Enter Product Code to get QR Code</div>\r\n                                            )}\r\n                                        </div>\r\n                                    </CCardBody>\r\n                                </CCard>\r\n                            </div>\r\n                            <div className=\"col-sm-4\" style={{ float: 'right' }}>\r\n                                <CCard className=\"\">\r\n                                    <CCardHeader>\r\n                                        <strong>Product Bar Code</strong>\r\n                                    </CCardHeader>\r\n                                    <CCardBody>\r\n                                        <div className=\"text-center\">\r\n                                            {state.code !== '' ? (\r\n                                                <Barcode value={state.code} width=\"2\" height=\"40\" />\r\n                                            ) : (\r\n                                                <div>Enter Product Code to get Bar Code</div>\r\n                                            )}\r\n                                        </div>\r\n                                    </CCardBody>\r\n                                </CCard>\r\n                            </div>\r\n                        </CCardBody>\r\n                    </CCard>\r\n                </CCol>\r\n            </CRow>\r\n            <hr />\r\n            <CCol xs={12} className=\"text-right\">\r\n                <CRow className=\"mb-4 text-right\">\r\n                    <div className=\"col-sm-1\">\r\n                        <CButton color=\"secondary\" type=\"reset\">\r\n                            Clear\r\n                        </CButton>\r\n                    </div>\r\n                    <div className=\"col-sm-3\">\r\n                        <CButton color=\"primary\" type=\"submit\">\r\n                            Submit form\r\n                        </CButton>\r\n                    </div>\r\n                </CRow>\r\n            </CCol>\r\n        </CForm >\r\n    ) : (\r\n        <></>\r\n    )\r\n}\r\n\r\nexport default EditProduct\r\n"],"sourceRoot":""}